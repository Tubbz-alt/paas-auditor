// Code generated by go-bindata.
// sources:
// sql/001_create_to_seconds_function.sql
// sql/002_create_iso8601_function.sql
// sql/010_create_app_usage_events.sql
// sql/020_create_service_usage_events.sql
// sql/025_create_pricing_plans.sql
// sql/026_create_pricing_functions.sql
// sql/027_create_validate_formula_trigger.sql
// sql/030_create_billable.sql
// sql/040_create_billable_range_function.sql
// DO NOT EDIT!

package db

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sql001_create_to_seconds_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x3d\x4b\x43\x31\x14\xc6\xf1\xd9\x7c\x8a\x67\xc8\x90\x0c\x77\x70\x6d\xa7\x18\x62\xb9\x90\xa6\x9a\x97\x59\xae\xf1\xd4\x0a\xed\xcd\x25\x49\x51\xfc\xf4\x22\xb5\xd2\xed\xc0\x79\xf8\xfd\xd9\x30\xa0\x97\x97\x46\xb9\xcc\x6f\x0d\xf4\xd5\xeb\x94\x7b\x43\x3f\x10\xe6\xf3\xe9\x95\x2a\xca\x1e\xd7\xf7\xbe\x96\x13\x26\xf4\xd6\xbf\xeb\x34\xbf\x13\xd3\xde\xa8\x68\xb0\xf3\xf0\xe6\xc9\x2a\x6d\xf0\x98\x9c\x8e\xe3\xce\xdd\xa8\xe2\x7f\x2f\xe1\x4d\x4c\xde\x85\x5f\x9b\xea\x47\x86\x0a\xe0\x9c\xdd\x35\x3a\x52\xee\xd7\xbc\xa0\xa5\xe4\xc3\xa5\x26\xce\xcb\x42\x55\xf0\x7b\x89\x01\xc7\xf2\x79\xb9\xa5\x5c\xad\xfe\x88\x35\xe3\x1c\x56\xb9\x4d\x52\x1b\x83\xf0\x6c\x31\x6e\xb7\x29\xaa\x07\x6b\x10\xa2\x1f\x75\x5c\xb3\x9f\x00\x00\x00\xff\xff\xec\xd8\x3f\xd6\xe6\x00\x00\x00")

func sql001_create_to_seconds_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql001_create_to_seconds_functionSql,
		"sql/001_create_to_seconds_function.sql",
	)
}

func sql001_create_to_seconds_functionSql() (*asset, error) {
	bytes, err := sql001_create_to_seconds_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/001_create_to_seconds_function.sql", size: 230, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql002_create_iso8601_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\x41\x4b\xc3\x30\x18\x87\xf1\xb3\xfd\x14\x7f\xca\xa0\x1b\x58\x50\x11\x91\xf5\x14\xd3\xd8\x15\xd6\x54\xd2\xe4\x50\x2f\x12\x66\x36\x0b\x5b\x52\x93\x77\x20\xfb\xf4\x32\x76\x7f\x9e\x5f\x59\x62\x7f\xf6\x3b\x9a\x82\xc7\x3e\x44\x44\x37\x47\x97\x9c\xa7\xc9\x1f\xf0\x6d\xc9\x25\xd8\x84\x76\xe8\xf1\xfa\xf2\xf0\x08\xa3\x79\xc6\x95\x60\x5a\xa0\x57\x50\xe2\x63\xcb\xb8\xc0\xbb\x91\x5c\xb7\xbd\xc4\x94\xc2\x35\x5b\x12\x68\x3a\xb9\x44\xf6\x34\xd3\x65\x85\xe8\xe8\x1c\x7d\x02\xb9\x3f\x02\x1b\xb0\x58\xe0\x4d\x34\xad\xcc\xee\x94\xd0\x46\x49\x50\xf8\xda\xfd\xd8\xb8\x24\xd8\xdb\x8a\x4b\xf0\x0e\x85\xd1\xbc\xb8\x47\x31\x8e\xe3\x58\x76\x5d\x59\xd7\xb9\xce\x37\x9b\xa7\xe7\x75\xd7\xae\x87\x21\xff\xcc\x8b\x55\x95\x09\x59\x57\x57\x72\xcb\x64\x63\x58\x23\x30\x1f\xe7\x43\xfa\x3d\x56\xd9\x7f\x00\x00\x00\xff\xff\xf6\x3f\xf6\x71\xdd\x00\x00\x00")

func sql002_create_iso8601_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql002_create_iso8601_functionSql,
		"sql/002_create_iso8601_function.sql",
	)
}

func sql002_create_iso8601_functionSql() (*asset, error) {
	bytes, err := sql002_create_iso8601_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/002_create_iso8601_function.sql", size: 221, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql010_create_app_usage_eventsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xbf\x0a\xc2\x30\x10\x80\xf1\x39\xf7\x14\x37\xb6\xd0\x4d\x70\xe9\x94\xd6\x13\x23\x6d\xaa\x4d\x0a\xdd\x42\x30\x47\xc9\xa0\x94\xfe\x51\x1f\x5f\x04\x41\x10\x5f\xe0\xfb\x7e\x65\x4b\xd2\x12\x5a\x59\x54\x84\x6a\x8f\xba\xb1\x48\xbd\x32\xd6\xa0\x1f\x47\xb7\xce\x7e\x60\xc7\x77\xbe\x2d\x33\x26\x20\x62\x40\x43\xad\x92\x55\x06\x62\x58\x63\xc0\xf2\x20\xdb\x64\xb3\x4d\xb1\xd3\xea\xdc\x51\x06\xe2\x32\xb1\x5f\x38\x38\xbf\xa0\x55\x35\x19\x2b\xeb\x53\x06\x62\xf2\x0f\x77\xe5\xf9\xdd\xc3\xa3\x69\x74\x01\x69\x0e\x9f\xbb\xd2\x3b\xea\x7f\xee\x31\x3c\xdd\x57\x10\x03\x36\xfa\x8f\x28\x86\x34\x87\x57\x00\x00\x00\xff\xff\x7c\xeb\x1f\x76\xc4\x00\x00\x00")

func sql010_create_app_usage_eventsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql010_create_app_usage_eventsSql,
		"sql/010_create_app_usage_events.sql",
	)
}

func sql010_create_app_usage_eventsSql() (*asset, error) {
	bytes, err := sql010_create_app_usage_eventsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/010_create_app_usage_events.sql", size: 196, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql020_create_service_usage_eventsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\xb1\xaa\x83\x30\x14\x00\xd0\x39\xf7\x2b\xee\xa8\xe0\xf6\xe0\x2d\x4e\xd1\x77\x1f\x4d\xd1\xd8\x9a\x08\x6e\x21\x98\x8b\x64\x68\x07\xa3\xb6\x9f\x5f\x0a\x5d\x5a\xe8\x0f\x1c\x4e\xdd\x93\xb4\x84\x56\x56\x0d\xa1\xfa\x47\xdd\x59\xa4\x51\x19\x6b\x30\xf1\xb2\xc7\x89\xdd\x96\xfc\xcc\x8e\x77\xbe\xae\x09\x33\x10\x31\xa0\xa1\x5e\xc9\xa6\x00\x31\x6f\x31\x60\x7d\x90\x7d\xf6\xf3\x9b\xe3\xa0\xd5\x79\xa0\x02\xc4\xb4\xb0\x5f\x39\x38\xbf\xa2\x55\x2d\x19\x2b\xdb\x53\x01\x62\xf1\x37\x77\xe1\xf4\xf4\xf0\x68\x3a\x5d\x41\x5e\xc2\x6b\xa0\xf4\x1f\x8d\x1f\x83\x18\xee\xee\x7d\x11\x03\x76\xfa\xcb\x2c\x86\xbc\x84\x47\x00\x00\x00\xff\xff\x30\x74\xca\xe1\xd0\x00\x00\x00")

func sql020_create_service_usage_eventsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql020_create_service_usage_eventsSql,
		"sql/020_create_service_usage_events.sql",
	)
}

func sql020_create_service_usage_eventsSql() (*asset, error) {
	bytes, err := sql020_create_service_usage_eventsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/020_create_service_usage_events.sql", size: 208, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql025_create_pricing_plansSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6b\xb3\x30\x18\x85\xaf\xcd\xaf\x38\x97\x0a\x0a\xdf\x7d\xe1\x83\xae\xcb\x98\xd4\xd9\xcd\x2a\xb4\x57\x21\x68\xea\x02\x49\x94\x18\x47\xb7\x5f\x3f\x74\x76\xae\xdd\xc6\x9a\xab\x10\xde\xf7\x21\xe7\x3c\x51\x84\xd6\xca\x52\x9a\x1a\xad\xe2\xa6\x43\xd9\x18\xc7\xa5\xc1\xa1\xb1\xba\x57\xbc\x1b\x2e\x28\xb9\x2a\x7b\xc5\xdd\x38\x66\x65\x29\x3a\xb2\xca\xe8\x32\xa7\xc8\x97\x37\x09\x45\x7c\x87\x74\x93\x83\xee\xe2\x6d\xbe\x3d\x01\xd9\x08\xf4\x89\x27\x2b\x74\xc2\x4a\xae\xf0\x98\xc5\x0f\xcb\x6c\x8f\x35\xdd\x87\xc4\x33\x5c\x0b\x38\x71\x74\xe3\x72\x5a\x24\x49\x48\xbc\x17\xae\x64\xc5\x0e\xb6\xd1\x70\x52\x8b\xce\x71\xdd\xba\xb7\xaf\x13\x03\x96\xd5\xbd\xac\xbe\xed\x4e\x7f\xbe\x7c\x27\xde\xea\x9e\xae\xd6\xf0\x95\x30\xb5\x7b\xf6\x9d\x95\xda\xff\xa4\x04\x01\xfe\xe3\x5f\x10\xe2\xb7\x13\x45\x30\x8d\x83\xd0\xad\x7b\xfd\x11\x35\xe4\xf8\x93\x72\x1d\x6a\x4a\x30\xd1\xae\x46\x05\x0b\x72\x12\x52\xa4\xf1\x53\x41\x11\xa7\xb7\x74\x77\xe1\x45\x56\x47\x76\xe6\x86\x7d\x94\xcd\x4d\xc5\xe6\x52\x37\xe9\xb9\x40\xf8\xb3\x92\x10\x73\x6d\x0b\xf2\x1e\x00\x00\xff\xff\xdd\x23\x2b\xd5\x3c\x02\x00\x00")

func sql025_create_pricing_plansSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql025_create_pricing_plansSql,
		"sql/025_create_pricing_plans.sql",
	)
}

func sql025_create_pricing_plansSql() (*asset, error) {
	bytes, err := sql025_create_pricing_plansSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/025_create_pricing_plans.sql", size: 572, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql026_create_pricing_functionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4f\x6b\xe3\x3c\x10\xc6\xcf\x9a\x4f\x31\x07\x83\x6c\x70\xa0\xef\x7b\x8c\xd9\x83\x9b\x6a\x43\x20\x75\x17\x37\xb9\x2d\x04\x45\x99\xa6\x02\xc9\x72\xf5\xa7\xcd\x2e\xfd\xf0\x8b\x9b\xd8\x84\xee\xb2\xac\x2f\xd6\xcc\xe8\x99\x79\xf4\x9b\xd9\x0c\xe9\x44\x0a\x25\x3e\x39\x6f\x93\x91\xf8\xa6\xe3\x33\xbe\x4a\xaf\xe5\xde\x50\xc0\x90\xf6\x21\xea\x98\x22\x1d\x60\xd1\x8a\x7a\x23\xf0\xa1\xc5\x56\x7c\x5b\xd7\x0b\x81\x5f\xb7\xcd\x62\xb3\x7a\x68\x90\x5e\xa5\xd9\x5d\x5a\xe4\xc0\xec\x1e\xbb\x64\xc9\x6b\x55\x02\x3b\x24\x2f\xa3\x76\x1d\xc6\x10\x7f\x7a\xd9\x1d\xa9\x04\x36\x8e\x8b\x74\x8a\x50\xa0\xa7\x98\x7c\x17\x46\x15\xd6\x8f\x98\x65\x70\x27\x16\xeb\xba\x15\xc0\x5c\x8a\x63\xa9\x82\x5b\xb1\x5c\x35\xc0\x06\xdf\x29\x12\x2a\x67\x7b\x6d\x68\x9a\x7e\xf9\x17\xa8\xbb\xe8\x70\x50\xa6\xa0\xbb\x23\x30\xa6\x9c\x34\x14\x14\xe5\x76\x5f\xe2\x4d\x51\x02\x63\x74\x8a\x5e\xaa\x98\x53\xef\xd4\x33\x3e\x79\x67\x31\x4f\x7d\x4f\x3e\x1f\x5d\x17\x38\x43\xe3\xde\xae\x33\x45\x51\x01\x3b\x3b\x1e\xfa\x57\x20\x9a\xbb\x0a\xb3\x0c\xd7\x75\xb3\xdc\xd6\x4b\x81\xbd\xe9\x8f\xe1\xc5\xe0\xea\xfe\x7e\xbb\xa9\x6f\xd7\xa2\x02\x00\x98\xcd\x46\xb3\x13\xed\x0f\x8f\xe1\xc5\xfc\x8d\xed\xe7\x07\xe2\x35\x3b\x2c\xb0\x15\x9b\x6d\xdb\x3c\x9e\xc3\x3f\x80\x1b\xf2\x13\xb5\x21\x31\xff\x82\x79\x20\x43\x2a\x02\x63\xfc\x7c\xc2\x9c\x03\x63\xec\xfd\x1d\x3d\x1d\xe9\xd4\xef\x3c\xf5\x46\x2a\xca\x3f\x85\x13\xc3\x33\x93\x11\x76\x89\xfc\x86\x7f\x10\x65\x8c\x7f\xcf\x2c\x59\xe7\x7f\xec\x74\xb7\xb3\x7b\x5e\xe2\xf0\xf1\x3c\xfb\x6f\x3e\xbf\x2c\xb1\xe0\x25\xf2\xe3\x95\x20\x6a\x4b\xc3\xf5\x40\xca\x75\x87\x30\x68\x78\x9e\xfd\xff\x9b\xe0\xe2\x91\x17\x53\xa5\xe2\xc0\xfe\x75\x1f\x15\xfc\x0a\x00\x00\xff\xff\x3f\x83\x71\xf1\xf0\x02\x00\x00")

func sql026_create_pricing_functionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql026_create_pricing_functionsSql,
		"sql/026_create_pricing_functions.sql",
	)
}

func sql026_create_pricing_functionsSql() (*asset, error) {
	bytes, err := sql026_create_pricing_functionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/026_create_pricing_functions.sql", size: 752, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql027_create_validate_formula_triggerSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xd1\x4b\xe3\x4a\x18\xc5\x9f\x3b\x7f\xc5\xb9\xd8\x4b\x12\x6d\xbc\xfa\x78\x1b\xe4\x52\xd3\xa9\x06\x24\x29\xd3\x14\x85\xeb\x6e\x88\xed\x67\x1c\x9c\x4c\xb2\xc9\xc4\xea\xe2\x1f\xbf\xb4\xb6\x52\xab\xc2\xb2\x9b\x7d\x99\x96\x61\xce\xef\x7c\x5f\x1e\xce\x71\x5d\x2c\xee\xa4\x21\x25\x6b\x83\x42\xab\x27\xe6\x0b\x3e\x88\x39\x22\x01\xc1\xc7\x17\x03\x9f\x63\x34\x0d\xfd\x38\x88\x42\x3c\xa4\x4a\xce\x53\x43\xc9\x6d\x51\xe5\x8d\x4a\x6d\x07\x82\xc7\x53\x11\x4e\x60\x2a\x99\x65\x54\x61\x30\x41\xb7\xcb\x86\xdc\xbf\x18\x08\xce\x3a\x52\xaf\x34\x1b\x01\x0c\x3d\x1a\x8f\x75\xa4\x52\x94\xa5\x2a\x31\xc5\x3d\xe9\xcd\xe5\xbc\xc9\xf3\xa7\xa4\xac\xe4\x8c\xa0\x9b\x9c\x2a\x39\xf3\xd8\x29\x3f\x0b\xc2\xf7\x9c\xfe\x09\x54\xb1\xa0\xca\x0e\xf9\xe5\xe1\xfa\xd2\xf1\x3e\x7c\x67\xd7\xa4\x68\x66\x50\x51\x46\x8f\x65\x52\x51\xa9\xd2\x19\xd9\x3b\x2f\x7b\xb0\xfa\x7d\x5b\x6a\x43\x19\x55\xcf\x37\x32\x93\xda\x3c\xaf\xa7\x70\xac\x1e\xac\xbd\xe5\x91\x59\xce\xef\xba\xd8\xff\x1f\xb9\xff\x7e\x39\x70\xfe\xbb\x3e\xdc\xfc\xfd\x13\xf8\x36\x99\xd7\xdd\x9c\xf2\xa2\x7a\x4a\xa4\x4e\xf2\x9b\x76\xc9\x46\xe6\xb4\xe4\xd6\x34\x2b\xf4\xbc\x6e\x15\x6e\x3f\x5f\xb7\xfb\x1d\xf6\x5b\xa5\xb9\xad\xd2\x0e\x5a\xa5\xfd\xd3\x2a\xed\x6b\xab\xb4\xba\xd5\x55\xf7\x56\xb4\x2d\x58\x30\xc2\xee\x33\xfc\x75\x02\xcb\x72\x10\x9f\xf3\x90\x75\x76\xd2\x6b\xcb\x6c\x1f\xb7\x55\x91\x6f\x3c\xeb\x52\x49\x93\x98\x22\x31\xe9\x8d\xfa\x6c\x13\x07\x4a\xe6\xd2\xe0\x78\x69\xdd\x11\x83\x60\xc2\xc1\xaf\x7c\x3e\x5e\x05\xae\xb5\xb6\xc2\x8b\x95\xd4\x58\xab\xfb\xf8\xdb\xea\xe1\xcd\x20\x1e\xeb\xf0\x70\x88\x60\xe4\xb1\x8e\xeb\x22\x35\x86\xf2\xd2\xc0\x14\x68\x6a\x82\xb9\x23\xbc\x86\x70\x01\xd2\x75\x53\x11\xa4\xc1\xa2\xa8\xee\x6b\x2c\xa4\xb9\xc3\xac\xc8\xf3\x42\x83\xe6\x19\x61\x96\xd6\x04\xa9\xcb\xc6\xd4\x6f\x93\x79\x6b\x5d\x7a\x48\xd5\x6b\x15\x1c\xf5\x4c\x6d\xbe\x57\xa9\xce\xc8\xd6\xc5\xc2\x76\x7a\x58\xfd\x38\x3d\x6c\x67\xb4\xe3\xfd\x1c\xee\xf8\x13\x1c\x0e\x60\x1d\xe3\x25\x2d\xac\x5f\x64\xeb\x46\xa9\xde\xea\x78\x27\x7f\xa9\xb3\xe5\xb5\xc7\x78\x38\xf4\x58\xb7\x0b\x95\xea\xac\x49\x33\x42\xa9\xca\xac\xfe\xa6\x3c\xc6\x5c\x17\x35\x99\xa6\xdc\xd4\x1e\x1b\x8a\x68\x8c\x58\x04\x67\x67\x5c\x20\x18\x81\x5f\x05\x93\x78\x02\x93\x55\xc9\x6e\x69\x22\x0a\xb1\x9c\x4f\xea\x2c\x29\x55\xaa\x6b\x6f\x53\xb9\x1b\xfd\x87\xaa\x53\x3e\x8a\x04\x47\x10\x4e\xb8\x88\x97\xed\x3c\x1d\x0f\x57\x3d\xbd\x43\x63\xa3\x48\x80\x0f\xfc\x73\x88\xe8\x12\xfc\x8a\xfb\xd3\x98\x63\x2c\x22\x9f\x0f\xa7\x82\x7f\xd0\xe1\x1e\x63\x3f\x02\x00\x00\xff\xff\x00\xb3\x17\x19\x06\x08\x00\x00")

func sql027_create_validate_formula_triggerSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql027_create_validate_formula_triggerSql,
		"sql/027_create_validate_formula_trigger.sql",
	)
}

func sql027_create_validate_formula_triggerSql() (*asset, error) {
	bytes, err := sql027_create_validate_formula_triggerSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/027_create_validate_formula_trigger.sql", size: 2054, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql030_create_billableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdf\x6f\xdb\x36\x10\x7e\x96\xfe\x8a\x43\x1e\x2a\x6b\xb0\xb5\x66\x4d\xb6\x36\x41\x0b\x04\xb3\x37\x18\xe8\x92\x20\x71\xb7\x6e\x2f\x02\x2d\x9e\x6c\x76\x12\x49\x90\x94\xd5\xf4\xaf\x1f\x48\x89\xd6\x8f\x38\x71\x06\x0c\xcb\x4b\x24\xea\xee\x78\xbc\xef\xfb\xee\xe8\xf9\xdd\xcd\x2d\xfc\x76\xb5\x5a\xdc\x2d\xaf\x3e\x2e\xff\x5a\xcc\xe1\xf7\xe5\xe2\x0f\x58\xfe\x02\x8b\xcf\xcb\xfb\xd5\x3d\xac\x59\x51\x90\x75\x81\x97\xe1\xcf\x77\x8b\xab\xd5\xe2\xb0\xf1\xf5\xcd\x6a\xec\x00\x57\xf7\x50\x33\xb3\x0d\xc3\xd9\x0c\xf0\xab\x51\x24\x33\x50\x69\xcc\xab\x02\xb4\xa9\xf2\x1c\x72\x25\x4a\xa8\x34\xd9\x20\xe0\x0e\xb9\xd1\xd6\xb2\x46\x30\x0a\x89\x81\xb5\x30\x5b\x20\x52\x6a\x20\x9c\x82\x46\xb5\x63\x19\x6a\x20\xba\xdb\xe1\x44\xa1\x16\x95\xca\x50\x9f\x80\x16\xc0\x85\x2a\x49\xc1\xbe\x21\x98\x2d\x42\xce\xb0\xa0\x3e\x64\xf7\x49\x1b\x62\x50\x83\x11\xf0\xa5\xd2\x06\xee\x57\x57\x77\xab\xc5\xfc\xfb\xfb\xd5\xcd\xed\xed\x62\x0e\x6b\xcc\x48\xa5\xb1\x4b\x23\x13\x5c\x63\x56\x19\xb6\x43\x6f\x6c\x9d\x4b\x24\x1c\x4e\x2a\x49\x89\xc1\x93\xb0\x49\xdf\xe6\x36\x09\x83\x49\x18\x04\x1a\x0b\xcc\x4c\x18\x04\x01\xa3\x53\xfb\x2f\xb3\xc1\x90\xa6\xc4\x5c\x5c\x18\x56\xa2\x36\xa4\x94\xe6\x9b\x75\xe9\x3e\x39\xcb\x89\x22\x75\x5a\xa2\xb6\x75\x99\x7d\xf8\x10\x11\x29\xd3\x4d\xc5\x68\x14\x5b\x63\xfb\xf4\xa4\x19\x27\x25\x36\x66\xf6\xe9\xa0\x99\x50\x9b\x5e\x34\xff\x76\xd0\x54\x4b\x92\x61\xcf\xb8\x7b\x77\xe6\x51\x7e\x46\xcf\xd6\xef\xce\xc9\x2c\x3f\x3f\xc7\xd9\xd9\xf9\xbb\x37\xb3\xb7\xf4\xfc\x6c\xf6\xe6\xcd\x8f\x67\xd9\x0f\xe7\x3f\xbd\x7b\x9b\x9d\x45\x17\x17\x06\xbf\x1a\xeb\x2e\x0b\xc2\x1b\x6f\x98\xcd\x20\x27\x7f\xa3\x5b\x02\x46\x21\x17\x0a\x32\x51\xca\xca\x34\x6b\xda\xc5\xa7\x98\x93\xaa\x30\xb3\xf6\xcb\x38\x94\x3b\x22\x1c\xfc\x1b\xc4\xb7\x76\x87\x77\xc8\x04\x29\x50\x67\x38\x3e\x38\xe3\xda\x10\x9e\x61\x9a\x89\x8a\x9b\x68\x0a\xd1\xeb\x28\xbe\xb8\xe0\x55\x89\x8a\x65\x36\x01\x6b\xd1\x7c\x9d\x3e\x17\xa8\xc4\x52\xa8\x87\x94\xf1\xb4\x5c\xa7\x12\x55\xea\x23\x1f\x8a\xd9\x37\x76\x51\xc7\x70\x58\xe2\x46\x0e\x08\xfb\x14\x06\x81\xd5\x8f\x35\xb4\xd0\x3b\x19\xa5\xad\x8c\x82\xa0\xde\xa2\xc2\xa7\x83\xbc\x87\xa8\xe5\x72\x64\x8d\x84\x82\x67\xec\x9c\x30\xa2\x30\x88\xa1\xe2\x4c\x70\xf8\x8f\xf9\xdd\x2a\x7b\x5f\x9b\x97\x90\xfd\x91\xcf\xff\xca\xfc\xa7\xb2\xd9\x33\xbc\xf1\xea\x08\x7f\xd4\xa9\x4b\xbf\xa3\xb6\xd3\xc0\x69\xf4\x1c\xef\xa2\xd7\xd1\xf3\x14\xca\x88\x76\x2c\xb0\x7c\xe0\xf0\x28\x05\x07\x72\x6c\x51\x6e\x7a\xfb\x3c\xb2\x9d\x93\x0f\xc9\x71\xd4\x77\xbe\xf8\xb8\x18\xf8\x7a\xc2\xbc\xc0\xf7\xd3\xed\xfc\xa9\x7d\x91\xd3\x43\x64\xf7\x75\x7b\x29\xe1\xc7\x4c\x31\x0f\xb2\x21\x76\x49\x38\xd9\x20\x4d\xc7\x16\x96\xe9\x61\x3c\x75\x63\x2b\x13\xe5\x9a\x71\x74\x13\x28\x13\x7c\x87\xca\xd8\xe6\xaf\x44\xad\x5d\x4b\x41\x92\x6d\xfd\x54\x98\xf9\xe9\x20\x54\x6f\xa9\x99\x2a\x92\x30\xe5\x86\x21\xd0\x4a\x11\x63\x55\xa4\x08\xdf\xa0\xdd\x83\xe5\x40\x60\x3f\xc8\x80\x0a\xd4\xc0\x85\x81\x2d\xd9\x21\x10\xf0\x21\xdc\x49\xe1\x01\xcd\xb4\xa9\x95\x1d\x71\xde\x2b\xd2\xa3\xb8\x50\xb3\xa2\x00\x57\x41\xe3\x2c\xad\x24\xdd\xc3\x8e\x61\x0d\x4c\x83\xc2\x5c\xa1\xde\x22\x6d\x66\x57\xea\xdc\xfc\x04\xdb\xab\xbb\xe1\xae\xe7\x70\x5f\x33\x43\x49\x78\xc2\x0e\x28\x3f\xa0\xf2\x90\xb9\x63\xa2\x1a\x6d\xbe\xb9\x0c\x26\xbd\x66\x01\x05\x12\x3a\x58\x38\x9d\x02\x17\xf5\x24\x8e\x41\xec\x50\xed\x8f\x9f\x36\x33\xdd\xe9\xc7\xd7\xc1\xe5\xd8\x50\xa7\x65\x8e\xa7\x4a\xcd\x38\x15\x75\x18\x04\x23\x77\x77\x76\x49\x94\x61\xae\x8e\xeb\x07\xd7\x7e\x40\x28\x8a\xca\xbe\x31\xda\xe0\xbe\x46\x53\x23\x72\xc8\x2a\xa5\x2c\x24\x4a\xd4\x8e\x1f\xa7\x90\x8b\xa2\x10\x35\xe3\x9b\x38\x0c\xbc\x9b\x2f\x1f\x30\xea\x49\xb5\x41\x8e\x8a\x18\xec\xd1\x68\x87\xea\x01\x4e\x3c\x03\x4f\x40\xe4\x40\xb8\xbd\xfc\x58\x7b\xb3\x75\x78\xe9\xaa\x30\xb6\x03\x58\xb6\x88\x1a\x24\xaa\x99\x77\x08\x3b\xfa\x8c\x00\x34\xc9\x77\x0e\xc1\x76\x4b\x4b\x76\x86\x7a\x72\x3a\x05\x93\x74\x90\xc4\xc3\x22\x79\x32\x18\x97\xf1\x8e\x14\x8c\xa6\x52\xb1\x8c\xf1\x8d\x6b\x57\x8f\x76\x91\xb2\xd9\xa6\x83\xb1\x71\xb2\x41\x5b\x18\xfb\x0b\xa7\x53\x88\x18\xcf\x19\x67\xe6\x21\x6a\xb1\x74\x71\x1d\x82\xad\xa5\x50\xfb\xa4\x86\x7b\x4b\xd9\xc3\xb0\x4b\x67\x80\xdc\x9e\x87\x1d\x7c\x5d\x02\xff\x02\xc6\xd8\x01\xf6\x45\xb0\x46\x6f\x6d\x22\xed\x0d\xe2\x00\x34\x37\xd7\x1f\xff\x1c\x28\x53\x83\xd9\xda\x4b\x24\xe1\xb0\x46\x77\x71\xc5\xe6\xba\xb3\x46\x1b\xa8\x60\xda\x20\x0d\x7d\x21\x55\xe2\x94\xa3\x92\x56\x42\x2a\x69\xe5\xa3\x92\x9e\xf6\x54\x32\x10\x9f\x4a\x46\x6a\xea\x50\xb0\xc8\x3b\xf9\x68\x33\x29\x44\x8d\x6a\x22\x65\xb2\xaf\x6f\x3c\x6d\xd6\x54\xe2\x45\x13\xc7\x16\xc5\x02\x89\x36\x93\x4a\xca\x47\xf6\xcd\x5a\xdf\xde\xde\x0a\x86\xaa\x93\x32\x61\xae\x71\xf7\x51\x4b\x5d\xa6\x52\xba\xf3\x3c\xfa\xd8\x1e\x52\xca\x24\x17\xaa\xac\x0a\x32\x0d\x03\xdc\x91\x22\x6d\x5f\x27\xa3\x23\x42\x97\xc1\x14\x3a\xaf\xd8\x07\xc6\xb0\x21\x4e\x07\x82\x0a\x19\xe7\xa8\x1c\x92\x61\x70\x88\xd1\x52\x82\x6d\x9e\x49\xc7\x9c\xf7\x36\x74\xf7\x6a\xb9\xd1\xaf\x06\xbc\x7a\xd5\xcb\x23\x6c\xe7\x8f\x4a\x5c\x33\x19\x5c\xb0\xba\x56\x60\xf1\x0d\x2f\x43\xff\x4b\x6a\x79\x3d\x5f\x7c\x1e\xfd\x7a\x62\xf4\x6b\xca\x28\xdc\x5c\x77\xbf\x72\x26\x8c\xc6\x97\xc7\x7c\x84\xda\x0c\x9d\x3c\x61\x8e\xbb\x3a\x36\x0d\x9d\x3b\x82\x1d\x77\xef\xd7\x71\x18\x65\xc4\x80\xe3\xa1\xf6\x43\xac\x1f\xe6\xd3\xfd\xf2\xfa\x57\xd8\x30\x6d\x60\xb2\x27\xde\x65\xf8\x4f\x00\x00\x00\xff\xff\x29\xe7\x83\x5d\xb9\x0e\x00\x00")

func sql030_create_billableSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql030_create_billableSql,
		"sql/030_create_billable.sql",
	)
}

func sql030_create_billableSql() (*asset, error) {
	bytes, err := sql030_create_billableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/030_create_billable.sql", size: 3769, mode: os.FileMode(420), modTime: time.Unix(1511908108, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql040_create_billable_range_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6f\xa3\x30\x10\xc5\xcf\xf6\xa7\x98\x43\xd5\x84\x15\x54\xc9\x4a\xab\x95\x36\x27\x9a\xba\x51\xa4\x88\x54\x84\x48\x7b\x43\x26\x4c\xa8\x25\x63\xa8\x31\x49\xbb\x9f\x7e\x65\xfe\x84\x84\xed\x5e\x7a\x62\xde\x33\x9e\xe7\xdf\x18\x3c\x0f\x34\x56\x68\xe8\x53\xb8\x7d\x81\xe7\x7d\xb0\x8c\xd6\xdb\x00\xd6\xcf\xc0\x7e\xaf\x77\xd1\x0e\x12\x21\x25\x4f\x24\xc6\x9a\xab\x0c\xa7\xa6\x32\x7f\x9a\xca\x59\x50\xea\x79\xa3\x65\x78\xab\x51\x0b\xac\xc0\xbc\xe2\x65\x09\x4e\x02\xcf\x70\x2c\x34\x70\xc8\xc4\x09\x15\x34\xef\x52\xcf\xb3\x0d\xf0\x9d\xe7\xa5\xc4\x5f\x9d\x04\x80\x0a\x25\x1e\x0c\x7c\x83\xa3\x2e\xf2\xff\xe6\x4f\x27\xdf\x67\xf3\x9f\xde\x6c\xee\xcd\xe6\x13\x17\x06\xf5\x63\xe2\x38\x0b\xdb\x6d\x19\x32\x3f\x62\xb0\x0d\x21\x64\x2f\x1b\x7f\xc9\x06\xbc\x51\xd3\x36\x11\xd3\x0e\x62\x60\x84\x90\x45\xfb\x30\xd8\x41\xe4\x3f\x6e\xd8\x94\x12\x91\x82\x50\xc6\xa5\x24\xab\x45\x0a\x06\xdf\x6d\xad\x78\x8e\x7d\x5d\xe8\x2c\xbe\x5e\xab\x4a\x7e\xc0\x1b\x27\xc7\xbc\xd0\x1f\xb1\x50\x71\x9e\x80\xaa\x73\xd4\xe2\xe0\x52\x92\xd6\x9a\x1b\x51\xa8\x21\xdd\xa5\xa4\xd4\xe2\x20\x54\x16\x97\x92\xab\xf8\x92\x7d\xe3\x5e\x87\x1f\x0b\x9d\xd7\x92\xf7\xd2\xbe\x87\x7d\x04\x75\xc0\xdf\xc1\xdd\x1d\x3c\xb2\xd5\x3a\xa0\x44\xa3\xa9\xb5\x6a\x2e\xec\xa3\x1b\x39\x25\x24\x79\x10\xa9\xdb\x3c\xed\x91\xdb\xca\x26\xb4\x55\x0f\xd7\xaa\x01\xad\xd5\xd7\x60\xd6\x19\xae\x8a\x12\x42\x32\x8d\xdc\x60\x65\xa6\xb2\x38\xa3\x1e\x8d\xdc\x71\xa1\xb5\x93\x87\x7e\x0e\x8e\x63\x7b\x10\x89\xbc\x32\xd3\xba\x2c\x3f\xdb\xd3\xda\xd7\x7b\x28\x21\x0e\xf0\x0a\x7a\xa7\x3d\xd9\x68\x8c\x9f\x98\x03\x63\x37\x43\x2b\xf0\xc4\x65\xdc\xe9\x86\xe1\x5f\xc6\x11\xe4\x57\x29\xbf\x80\x49\xda\x9d\x97\x03\xf7\xe4\xcd\xa5\x53\x62\xff\x1d\xcb\xd3\xff\x83\x09\x25\xe7\x57\xd4\xd8\x30\x5e\xbe\xb5\xfb\x7b\xb8\x4d\x5b\x50\x16\x3c\x2d\xec\x67\xb2\xf1\x83\xd5\xde\x5f\x31\x28\x65\x99\x55\x6f\x72\x41\xff\x06\x00\x00\xff\xff\x0f\xae\xdd\x5f\x2b\x04\x00\x00")

func sql040_create_billable_range_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql040_create_billable_range_functionSql,
		"sql/040_create_billable_range_function.sql",
	)
}

func sql040_create_billable_range_functionSql() (*asset, error) {
	bytes, err := sql040_create_billable_range_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/040_create_billable_range_function.sql", size: 1067, mode: os.FileMode(420), modTime: time.Unix(1511854233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sql/001_create_to_seconds_function.sql": sql001_create_to_seconds_functionSql,
	"sql/002_create_iso8601_function.sql": sql002_create_iso8601_functionSql,
	"sql/010_create_app_usage_events.sql": sql010_create_app_usage_eventsSql,
	"sql/020_create_service_usage_events.sql": sql020_create_service_usage_eventsSql,
	"sql/025_create_pricing_plans.sql": sql025_create_pricing_plansSql,
	"sql/026_create_pricing_functions.sql": sql026_create_pricing_functionsSql,
	"sql/027_create_validate_formula_trigger.sql": sql027_create_validate_formula_triggerSql,
	"sql/030_create_billable.sql": sql030_create_billableSql,
	"sql/040_create_billable_range_function.sql": sql040_create_billable_range_functionSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"sql": &bintree{nil, map[string]*bintree{
		"001_create_to_seconds_function.sql": &bintree{sql001_create_to_seconds_functionSql, map[string]*bintree{}},
		"002_create_iso8601_function.sql": &bintree{sql002_create_iso8601_functionSql, map[string]*bintree{}},
		"010_create_app_usage_events.sql": &bintree{sql010_create_app_usage_eventsSql, map[string]*bintree{}},
		"020_create_service_usage_events.sql": &bintree{sql020_create_service_usage_eventsSql, map[string]*bintree{}},
		"025_create_pricing_plans.sql": &bintree{sql025_create_pricing_plansSql, map[string]*bintree{}},
		"026_create_pricing_functions.sql": &bintree{sql026_create_pricing_functionsSql, map[string]*bintree{}},
		"027_create_validate_formula_trigger.sql": &bintree{sql027_create_validate_formula_triggerSql, map[string]*bintree{}},
		"030_create_billable.sql": &bintree{sql030_create_billableSql, map[string]*bintree{}},
		"040_create_billable_range_function.sql": &bintree{sql040_create_billable_range_functionSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

