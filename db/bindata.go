// Code generated by go-bindata.
// sources:
// sql/001_create_to_seconds_function.sql
// sql/002_create_iso8601_function.sql
// sql/010_create_app_usage_events.sql
// sql/020_create_service_usage_events.sql
// sql/025_create_pricing_plans.sql
// sql/026_create_pricing_functions.sql
// sql/027_create_validate_formula_trigger.sql
// sql/030_create_billable.sql
// sql/035_create_pricing_plan_components.sql
// DO NOT EDIT!

package db

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sql001_create_to_seconds_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x3d\x4b\x43\x31\x14\xc6\xf1\xd9\x7c\x8a\x67\xc8\x90\x0c\x77\x70\x6d\xa7\x18\x62\xb9\x90\xa6\x9a\x97\x59\xae\xf1\xd4\x0a\xed\xcd\x25\x49\x51\xfc\xf4\x22\xb5\xd2\xed\xc0\x79\xf8\xfd\xd9\x30\xa0\x97\x97\x46\xb9\xcc\x6f\x0d\xf4\xd5\xeb\x94\x7b\x43\x3f\x10\xe6\xf3\xe9\x95\x2a\xca\x1e\xd7\xf7\xbe\x96\x13\x26\xf4\xd6\xbf\xeb\x34\xbf\x13\xd3\xde\xa8\x68\xb0\xf3\xf0\xe6\xc9\x2a\x6d\xf0\x98\x9c\x8e\xe3\xce\xdd\xa8\xe2\x7f\x2f\xe1\x4d\x4c\xde\x85\x5f\x9b\xea\x47\x86\x0a\xe0\x9c\xdd\x35\x3a\x52\xee\xd7\xbc\xa0\xa5\xe4\xc3\xa5\x26\xce\xcb\x42\x55\xf0\x7b\x89\x01\xc7\xf2\x79\xb9\xa5\x5c\xad\xfe\x88\x35\xe3\x1c\x56\xb9\x4d\x52\x1b\x83\xf0\x6c\x31\x6e\xb7\x29\xaa\x07\x6b\x10\xa2\x1f\x75\x5c\xb3\x9f\x00\x00\x00\xff\xff\xec\xd8\x3f\xd6\xe6\x00\x00\x00")

func sql001_create_to_seconds_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql001_create_to_seconds_functionSql,
		"sql/001_create_to_seconds_function.sql",
	)
}

func sql001_create_to_seconds_functionSql() (*asset, error) {
	bytes, err := sql001_create_to_seconds_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/001_create_to_seconds_function.sql", size: 230, mode: os.FileMode(420), modTime: time.Unix(1515665547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql002_create_iso8601_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\x41\x4b\xc3\x30\x18\x87\xf1\xb3\xfd\x14\x7f\xca\xa0\x1b\x58\x50\x11\x91\xf5\x14\xd3\xd8\x15\xd6\x54\xd2\xe4\x50\x2f\x12\x66\x36\x0b\x5b\x52\x93\x77\x20\xfb\xf4\x32\x76\x7f\x9e\x5f\x59\x62\x7f\xf6\x3b\x9a\x82\xc7\x3e\x44\x44\x37\x47\x97\x9c\xa7\xc9\x1f\xf0\x6d\xc9\x25\xd8\x84\x76\xe8\xf1\xfa\xf2\xf0\x08\xa3\x79\xc6\x95\x60\x5a\xa0\x57\x50\xe2\x63\xcb\xb8\xc0\xbb\x91\x5c\xb7\xbd\xc4\x94\xc2\x35\x5b\x12\x68\x3a\xb9\x44\xf6\x34\xd3\x65\x85\xe8\xe8\x1c\x7d\x02\xb9\x3f\x02\x1b\xb0\x58\xe0\x4d\x34\xad\xcc\xee\x94\xd0\x46\x49\x50\xf8\xda\xfd\xd8\xb8\x24\xd8\xdb\x8a\x4b\xf0\x0e\x85\xd1\xbc\xb8\x47\x31\x8e\xe3\x58\x76\x5d\x59\xd7\xb9\xce\x37\x9b\xa7\xe7\x75\xd7\xae\x87\x21\xff\xcc\x8b\x55\x95\x09\x59\x57\x57\x72\xcb\x64\x63\x58\x23\x30\x1f\xe7\x43\xfa\x3d\x56\xd9\x7f\x00\x00\x00\xff\xff\xf6\x3f\xf6\x71\xdd\x00\x00\x00")

func sql002_create_iso8601_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql002_create_iso8601_functionSql,
		"sql/002_create_iso8601_function.sql",
	)
}

func sql002_create_iso8601_functionSql() (*asset, error) {
	bytes, err := sql002_create_iso8601_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/002_create_iso8601_function.sql", size: 221, mode: os.FileMode(420), modTime: time.Unix(1515665547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql010_create_app_usage_eventsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x41\x6b\x83\x30\x18\xc6\xf1\x73\xf2\x29\xde\x9b\x06\xdc\x69\xb0\x8b\x20\x44\xf7\x8e\x65\x68\xdc\x4c\x04\x6f\x21\x2c\x41\x72\xd8\x10\x13\xb7\x7e\xfc\xd2\x52\x68\x29\x5e\x7a\x7f\xf8\x3f\xbf\x66\x40\xae\x11\x34\xaf\x5b\x04\xf1\x06\xb2\xd7\x80\x93\x50\x5a\x81\x5d\x16\xb3\x45\x3b\x7b\xe3\xff\xfc\x6f\x8a\x90\x53\x12\x1c\x28\x1c\x04\x6f\x0b\x4a\xe6\x2d\x38\x68\xde\xf9\x90\x3f\xbf\x30\x18\xa5\xf8\x1a\xb1\xa0\xe4\x7b\xf5\x36\x79\x67\x6c\x02\x2d\x3a\x54\x9a\x77\x9f\x05\x25\xab\xfd\x37\x3f\x3e\x9e\x7a\xf0\xa1\x7a\x59\x53\x56\xd2\xcb\xbb\x90\xaf\x38\xdd\xbd\x07\x77\x30\x57\x41\x70\xd0\xcb\x1d\x51\x70\x8f\x54\x62\xb2\xc9\xef\x87\x20\xbf\x01\x3e\x55\x55\x76\xde\x66\x0c\x58\x49\x8f\x01\x00\x00\xff\xff\xaa\xf2\x69\x45\x24\x01\x00\x00")

func sql010_create_app_usage_eventsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql010_create_app_usage_eventsSql,
		"sql/010_create_app_usage_events.sql",
	)
}

func sql010_create_app_usage_eventsSql() (*asset, error) {
	bytes, err := sql010_create_app_usage_eventsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/010_create_app_usage_events.sql", size: 292, mode: os.FileMode(420), modTime: time.Unix(1515665547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql020_create_service_usage_eventsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\x4a\xc4\x30\x14\x45\xd7\xc9\x57\xbc\xdd\xb4\x50\x57\x82\x1b\x61\x20\x33\x3e\x31\x32\x4d\xb5\x49\xa1\xbb\x10\x9a\x47\xc9\xc2\x22\x4d\x5a\xf5\xef\x45\xdb\x85\x0e\x74\xd1\xfd\xbd\xe7\x9c\x73\x8d\xc2\x20\x18\x71\xba\x20\xc8\x47\x50\x95\x01\x6c\xa5\x36\x1a\x22\x8d\x73\xe8\xc8\x4e\xd1\xf5\x64\x69\xa6\x21\x45\xc8\x38\x0b\x1e\x34\xd6\x52\x5c\x0a\xce\xfa\x29\x78\x38\x3f\x89\x3a\xbb\xbd\xcb\xa1\x51\xf2\xb5\xc1\x82\xb3\x6e\x24\x97\xc8\x5b\x97\xc0\xc8\x12\xb5\x11\xe5\x4b\xc1\xd9\xe8\x3e\xec\x1b\xc5\x1f\x1e\x3c\xeb\x4a\x9d\x78\x7e\xcf\xd7\x02\xa9\x1e\xb0\xbd\x2a\x08\xfe\xd3\xfe\xaf\x08\x1e\x2a\xb5\x51\x16\xfc\x5e\x5a\x4c\x2e\xd1\x36\x10\xb2\x3f\xc1\x37\xc7\xe3\xe1\x77\x7f\xc8\x61\xaf\x27\x7d\xbd\xef\xd2\xac\xb3\x30\xc4\xe4\x86\x6e\xf9\x2f\xda\xef\x00\x00\x00\xff\xff\xc6\x29\xc3\x37\xaf\x01\x00\x00")

func sql020_create_service_usage_eventsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql020_create_service_usage_eventsSql,
		"sql/020_create_service_usage_events.sql",
	)
}

func sql020_create_service_usage_eventsSql() (*asset, error) {
	bytes, err := sql020_create_service_usage_eventsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/020_create_service_usage_events.sql", size: 431, mode: os.FileMode(420), modTime: time.Unix(1515665547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql025_create_pricing_plansSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6b\xb3\x30\x18\x85\xaf\xcd\xaf\x38\x97\x0a\x0a\xdf\x7d\xe1\x83\xae\xcb\x98\xd4\xd9\xcd\x2a\xb4\x57\x21\x68\xea\x02\x49\x94\x18\x47\xb7\x5f\x3f\x74\x76\xae\xdd\xc6\x9a\xab\x10\xde\xf7\x21\xe7\x3c\x51\x84\xd6\xca\x52\x9a\x1a\xad\xe2\xa6\x43\xd9\x18\xc7\xa5\xc1\xa1\xb1\xba\x57\xbc\x1b\x2e\x28\xb9\x2a\x7b\xc5\xdd\x38\x66\x65\x29\x3a\xb2\xca\xe8\x32\xa7\xc8\x97\x37\x09\x45\x7c\x87\x74\x93\x83\xee\xe2\x6d\xbe\x3d\x01\xd9\x08\xf4\x89\x27\x2b\x74\xc2\x4a\xae\xf0\x98\xc5\x0f\xcb\x6c\x8f\x35\xdd\x87\xc4\x33\x5c\x0b\x38\x71\x74\xe3\x72\x5a\x24\x49\x48\xbc\x17\xae\x64\xc5\x0e\xb6\xd1\x70\x52\x8b\xce\x71\xdd\xba\xb7\xaf\x13\x03\x96\xd5\xbd\xac\xbe\xed\x4e\x7f\xbe\x7c\x27\xde\xea\x9e\xae\xd6\xf0\x95\x30\xb5\x7b\xf6\x9d\x95\xda\xff\xa4\x04\x01\xfe\xe3\x5f\x10\xe2\xb7\x13\x45\x30\x8d\x83\xd0\xad\x7b\xfd\x11\x35\xe4\xf8\x93\x72\x1d\x6a\x4a\x30\xd1\xae\x46\x05\x0b\x72\x12\x52\xa4\xf1\x53\x41\x11\xa7\xb7\x74\x77\xe1\x45\x56\x47\x76\xe6\x86\x7d\x94\xcd\x4d\xc5\xe6\x52\x37\xe9\xb9\x40\xf8\xb3\x92\x10\x73\x6d\x0b\xf2\x1e\x00\x00\xff\xff\xdd\x23\x2b\xd5\x3c\x02\x00\x00")

func sql025_create_pricing_plansSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql025_create_pricing_plansSql,
		"sql/025_create_pricing_plans.sql",
	)
}

func sql025_create_pricing_plansSql() (*asset, error) {
	bytes, err := sql025_create_pricing_plansSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/025_create_pricing_plans.sql", size: 572, mode: os.FileMode(420), modTime: time.Unix(1515665547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql026_create_pricing_functionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4f\x6b\xe3\x3c\x10\xc6\xcf\x9a\x4f\x31\x07\x83\x6c\x70\xa0\xef\x7b\x8c\xd9\x83\x9b\x6a\x43\x20\x75\x17\x37\xb9\x2d\x04\x45\x99\xa6\x02\xc9\x72\xf5\xa7\xcd\x2e\xfd\xf0\x8b\x9b\xd8\x84\xee\xb2\xac\x2f\xd6\xcc\xe8\x99\x79\xf4\x9b\xd9\x0c\xe9\x44\x0a\x25\x3e\x39\x6f\x93\x91\xf8\xa6\xe3\x33\xbe\x4a\xaf\xe5\xde\x50\xc0\x90\xf6\x21\xea\x98\x22\x1d\x60\xd1\x8a\x7a\x23\xf0\xa1\xc5\x56\x7c\x5b\xd7\x0b\x81\x5f\xb7\xcd\x62\xb3\x7a\x68\x90\x5e\xa5\xd9\x5d\x5a\xe4\xc0\xec\x1e\xbb\x64\xc9\x6b\x55\x02\x3b\x24\x2f\xa3\x76\x1d\xc6\x10\x7f\x7a\xd9\x1d\xa9\x04\x36\x8e\x8b\x74\x8a\x50\xa0\xa7\x98\x7c\x17\x46\x15\xd6\x8f\x98\x65\x70\x27\x16\xeb\xba\x15\xc0\x5c\x8a\x63\xa9\x82\x5b\xb1\x5c\x35\xc0\x06\xdf\x29\x12\x2a\x67\x7b\x6d\x68\x9a\x7e\xf9\x17\xa8\xbb\xe8\x70\x50\xa6\xa0\xbb\x23\x30\xa6\x9c\x34\x14\x14\xe5\x76\x5f\xe2\x4d\x51\x02\x63\x74\x8a\x5e\xaa\x98\x53\xef\xd4\x33\x3e\x79\x67\x31\x4f\x7d\x4f\x3e\x1f\x5d\x17\x38\x43\xe3\xde\xae\x33\x45\x51\x01\x3b\x3b\x1e\xfa\x57\x20\x9a\xbb\x0a\xb3\x0c\xd7\x75\xb3\xdc\xd6\x4b\x81\xbd\xe9\x8f\xe1\xc5\xe0\xea\xfe\x7e\xbb\xa9\x6f\xd7\xa2\x02\x00\x98\xcd\x46\xb3\x13\xed\x0f\x8f\xe1\xc5\xfc\x8d\xed\xe7\x07\xe2\x35\x3b\x2c\xb0\x15\x9b\x6d\xdb\x3c\x9e\xc3\x3f\x80\x1b\xf2\x13\xb5\x21\x31\xff\x82\x79\x20\x43\x2a\x02\x63\xfc\x7c\xc2\x9c\x03\x63\xec\xfd\x1d\x3d\x1d\xe9\xd4\xef\x3c\xf5\x46\x2a\xca\x3f\x85\x13\xc3\x33\x93\x11\x76\x89\xfc\x86\x7f\x10\x65\x8c\x7f\xcf\x2c\x59\xe7\x7f\xec\x74\xb7\xb3\x7b\x5e\xe2\xf0\xf1\x3c\xfb\x6f\x3e\xbf\x2c\xb1\xe0\x25\xf2\xe3\x95\x20\x6a\x4b\xc3\xf5\x40\xca\x75\x87\x30\x68\x78\x9e\xfd\xff\x9b\xe0\xe2\x91\x17\x53\xa5\xe2\xc0\xfe\x75\x1f\x15\xfc\x0a\x00\x00\xff\xff\x3f\x83\x71\xf1\xf0\x02\x00\x00")

func sql026_create_pricing_functionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql026_create_pricing_functionsSql,
		"sql/026_create_pricing_functions.sql",
	)
}

func sql026_create_pricing_functionsSql() (*asset, error) {
	bytes, err := sql026_create_pricing_functionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/026_create_pricing_functions.sql", size: 752, mode: os.FileMode(420), modTime: time.Unix(1515665547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql027_create_validate_formula_triggerSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\x51\x6f\xa3\x46\x14\x85\x9f\xcd\xaf\x38\xd5\xba\x02\x36\x66\xbb\x79\xac\x51\x54\x39\x78\x9c\x20\x45\x60\x8d\xb1\x12\xa9\x69\x11\xc6\x37\x64\x94\x61\xa0\x30\xc4\x71\x95\x1f\x5f\xe1\x84\xc8\x76\x12\xa9\x6a\xd9\x97\xb1\x35\x9a\xfb\x9d\x7b\x79\x38\xe7\x3a\x0e\x36\xf7\x42\x93\x14\xb5\x46\xa1\xe4\xd6\xf0\x38\x9b\x44\x0c\x21\x07\x67\xf3\xab\x89\xc7\x30\x5b\x06\x5e\xe4\x87\x01\x1e\x13\x29\xd6\x89\xa6\xf8\xae\xa8\xf2\x46\x26\x96\x0d\xce\xa2\x25\x0f\x16\xd0\x95\xc8\x32\xaa\x30\x59\x60\x38\x34\xa6\xcc\xbb\x9a\x70\x66\x0c\x84\xda\xd5\x74\x05\xd0\xf4\xa4\x5d\x63\x20\xa4\xa4\x2c\x91\xb1\x2e\x1e\x48\x75\x97\xeb\x26\xcf\xb7\x71\x59\x89\x94\xa0\x9a\x9c\x2a\x91\xba\xc6\x39\xbb\xf0\x03\x63\xe0\xcf\x60\x05\xec\xfa\x5b\xc7\x39\x83\x69\xda\x88\x2e\x59\x60\x0c\x06\x7c\xe2\x2f\x18\xd8\x8d\xc7\xe6\xbb\x36\xcd\xee\x55\x9a\x28\xa8\x42\x63\x45\xa0\xbc\xd4\x5b\xd3\x35\x06\x2c\x98\xc2\x9f\xb9\xef\x5b\x1b\x9f\x41\x16\x1b\xaa\xf6\x75\xec\x8f\xdf\x59\x35\x49\x4a\x35\x2a\xca\xe8\xa9\x8c\x2b\x2a\x65\x92\x92\x75\xf4\x72\x04\x73\x3c\xb6\x84\xd2\x94\x51\xf5\xbc\x12\x99\x50\xfa\xf9\x75\x30\xdb\x1c\xc1\xfc\xd2\x1e\x99\x69\xff\x5f\x15\xeb\xf7\xef\xce\xaf\x7f\x9c\xd8\xbf\xdd\x7e\xeb\xfe\xfe\x08\x7c\x9f\xcc\xdb\x61\x4e\x79\x51\x6d\x63\xa1\xe2\x7c\xd5\x2f\x59\x8b\x9c\x5a\x6e\x4d\x69\xa1\xd6\x75\x9f\xf0\x94\x84\xec\xb5\x59\xeb\xf9\xb6\xdf\xef\xfa\xb5\x57\x9a\xd3\x2b\xed\xa4\x57\xda\x2f\xbd\xd2\xfe\xec\x95\x56\xf7\x3a\xea\x97\x1d\x6d\x0f\xd6\xba\xe1\x31\xf0\xa7\x03\x4b\x3c\x34\xd8\x3d\xb1\xaf\xb8\xab\x8a\xbc\xd3\xac\x4b\x29\x74\xac\x8b\x58\x27\x2b\xf9\xd9\x24\x36\xa4\xc8\x85\xc6\x69\x2b\xfd\xde\x6c\x5f\xa5\xf0\x22\x25\x14\x5e\xab\xc7\xf8\xd9\x1c\xe1\xa0\x91\x7d\xfb\x75\x1c\x24\x5a\xb7\xb6\x0c\x5d\xa0\xa9\x09\xfa\x9e\xf0\x96\x13\x05\x48\xd5\x4d\x45\x10\x1a\x9b\xa2\x7a\xa8\xb1\x11\xfa\x1e\x69\x91\xe7\x85\x02\xad\x33\x42\x9a\xd4\x04\xa1\xca\x46\xd7\x87\xe1\xb1\x37\x2e\x3d\x26\xf2\x2d\xad\xbe\x8f\x74\xad\xff\xae\x12\x95\x91\xa5\x8a\x8d\x65\x8f\xb0\xfb\xb1\x47\xd8\xf7\x7c\xdb\xfd\x77\xb8\xd3\x4f\x70\x38\x81\x79\x8a\x17\xf7\x31\xff\x23\x5b\x35\x52\x8e\x76\xc7\xbb\xf2\x97\xc4\x6d\xaf\x5d\x83\x05\x53\xd7\x18\x0e\x21\x13\x95\x35\x49\x46\x28\x65\x99\xd5\x7f\x49\xd7\x30\x1c\x07\x35\xe9\xa6\xec\x92\xd9\x98\xf2\x70\x8e\x88\xfb\x17\x17\x8c\xc3\x9f\x81\xdd\xf8\x8b\x68\x01\x9d\x55\xf1\x71\xae\x23\x0c\xd0\xf6\x27\x54\x16\x97\x32\x51\xb5\xdb\x6d\x05\x5d\xfd\x87\x55\xe7\x6c\x16\x72\x06\x3f\x58\x30\x1e\xb5\x0b\xc4\x72\x3e\xdd\xad\x12\x47\x34\x63\x16\x72\xb0\x89\x77\x09\x1e\x5e\x83\xdd\x30\x6f\x19\x31\xcc\x79\xe8\xb1\xe9\x92\xb3\x0f\xd6\x0c\xd7\xf8\x27\x00\x00\xff\xff\xa3\x6f\x0f\xc6\xa8\x08\x00\x00")

func sql027_create_validate_formula_triggerSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql027_create_validate_formula_triggerSql,
		"sql/027_create_validate_formula_trigger.sql",
	)
}

func sql027_create_validate_formula_triggerSql() (*asset, error) {
	bytes, err := sql027_create_validate_formula_triggerSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/027_create_validate_formula_trigger.sql", size: 2216, mode: os.FileMode(420), modTime: time.Unix(1519392733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql030_create_billableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xdf\x6f\xdb\x36\x10\x7e\x96\xfe\x8a\x43\x5e\x64\x01\x96\xd7\xac\xf1\xd6\xba\x58\x81\x60\xd6\x06\x03\x5d\x92\xc5\xce\x56\xec\x45\xa0\xc5\x93\xcd\x4d\x22\x05\xf2\x64\x35\x45\xff\xf8\x81\x94\x69\x59\xae\x93\xf4\x61\x98\x5f\xac\x1f\xdf\x77\x3a\xde\xf7\x1d\x8f\xf3\xfb\xdb\x3b\xf8\xed\x7a\x95\xde\x2f\xae\x3f\x2c\xfe\x4a\xe7\xf0\xc7\x22\xfd\x13\x16\xbf\x40\xfa\x71\xb1\x5c\x2d\x61\x2d\xca\x92\xad\x4b\x7c\x17\xfe\x7c\x9f\x5e\xaf\xd2\xf3\xe0\x9b\xdb\xd5\x29\x01\xae\x97\xd0\x0a\xda\x86\x61\x92\x00\x7e\x22\xcd\x72\x82\xc6\x60\xd1\x94\x60\xa8\x29\x0a\x28\xb4\xaa\xa0\x31\x6c\x83\x80\x3b\x94\x64\x2c\xb2\x45\x20\x8d\x8c\x60\xad\x68\x0b\xac\xae\x0d\x30\xc9\xc1\xa0\xde\x89\x1c\x0d\x30\xd3\x7f\xe1\x42\xa3\x51\x8d\xce\xd1\x5c\x80\x51\x20\x95\xae\x58\x29\x3e\x23\xd0\x16\xa1\x10\x58\x72\x1f\xb2\x7f\x65\x88\x11\x1a\x20\x05\x7f\x37\x86\x60\xb9\xba\xbe\x5f\xa5\xf3\xef\x96\xab\xdb\xbb\xbb\x74\x0e\x6b\xcc\x59\x63\xb0\x4f\x23\x57\xd2\x60\xde\x90\xd8\xa1\x07\x5b\x72\x85\x4c\xc2\x45\x53\x73\x46\x78\x11\x76\xe9\xdb\xdc\x46\x61\x30\x0a\x83\xc0\x60\x89\x39\x85\x41\x10\x08\x3e\xb6\x7f\xb9\x0d\x86\x3c\x63\x34\x9b\x91\xa8\xd0\x10\xab\x6a\xfa\x6c\x29\xfd\x2b\x87\x1c\x69\xd6\x66\x15\x1a\x5b\x97\xe4\xfd\xfb\x88\xd5\x75\xb6\x69\x04\x8f\x62\x0b\xb6\x57\x4f\xc2\x24\xab\xb0\x83\xd9\xab\xb3\x30\xa5\x37\x47\xd1\xfc\xdd\x59\xa8\xa9\x59\x8e\x47\xe0\xfe\xde\xc1\xa3\xe2\x8a\x5f\xad\xdf\x4e\x59\x52\x4c\xa7\x98\x5c\x4d\xdf\xbe\x4e\xde\xf0\xe9\x55\xf2\xfa\xf5\x0f\x57\xf9\xf7\xd3\x1f\xdf\xbe\xc9\xaf\xa2\xd9\x8c\xf0\x13\x59\x7a\x5d\x32\xd9\xb1\x21\x49\xa0\x60\xff\xa0\x7b\x04\x82\x43\xa1\x34\xe4\xaa\xaa\x1b\xea\x9e\x19\x17\x9f\x63\xc1\x9a\x92\x92\xfd\x9b\xd3\x50\x6e\x89\x70\xf6\x37\x88\x6f\x71\xe7\xbf\x90\x2b\x56\xa2\xc9\xf1\x74\xe1\x42\x1a\x62\x32\xc7\x2c\x57\x8d\xa4\x68\x0c\xd1\xab\x28\x9e\xcd\x64\x53\xa1\x16\xb9\x4d\xc0\x22\xba\xb7\xe3\xe7\x02\x55\x58\x29\xfd\x98\x09\x99\x55\xeb\xac\x46\x9d\xf9\xc8\xe7\x62\x1e\x83\x5d\xd4\x53\x39\xac\x71\x23\x27\x84\xbd\x0a\x83\xc0\xf6\x8f\x05\x5a\xe9\x5d\x1b\x65\xfb\x36\x0a\x82\x76\x8b\x1a\x9f\x0e\xf2\x13\x44\x7b\x2f\x47\x16\xa4\x34\x3c\x83\x73\x8d\x11\x85\x41\x0c\x8d\x14\x4a\x02\x2b\x4b\xf8\x8f\x3d\xbe\xef\xee\x43\x7d\xbe\xc5\xf0\x5f\x71\xfe\x57\xf7\x3f\x95\xcd\xc1\xe5\x1d\xab\x37\xfd\x8b\xa4\x3e\xfd\xde\xde\xae\x0f\x2e\xa3\xe7\xbc\x17\xbd\x8a\x9e\xb7\x51\xce\x8c\x73\x82\xf5\x84\x84\xaf\x52\x70\x42\xc7\x56\xe9\x6e\x7f\x9f\x47\x76\xf7\x94\x43\x83\xbc\xc8\x9d\xa7\x1f\xd2\x01\xd7\x9b\xe6\x1b\xb8\x0f\x77\xf3\xa7\xbe\x8b\x92\x9f\x33\xbc\xaf\xdb\xb7\x9a\xfe\xd4\x29\xf4\x58\x77\xe6\xae\x98\x64\x1b\xe4\xd9\x29\xc2\xba\x3d\x8c\xc7\x6e\x74\xe5\xaa\x5a\x0b\x89\x6e\x0a\xe5\x4a\xee\x50\x93\x1d\x00\x5a\xb5\xc6\x6d\x2b\xc8\xf2\xad\x9f\x0c\x89\x9f\x10\x4a\x1f\x3d\xea\x26\x4b\xcd\x84\x76\x03\x11\x78\xa3\x19\xd9\x4e\xd2\x4c\x6e\xd0\x7e\x43\x14\xc0\xe0\x30\xcc\x80\x2b\x34\x20\x15\xc1\x96\xed\x10\x18\xf8\x10\x6e\xa5\xf0\x88\x34\xee\x6a\x65\xc7\x9c\x67\x45\xe6\x24\x2e\xb4\xa2\x2c\xc1\x55\x90\x1c\xd2\xb6\xa4\xbb\xd8\x09\x6c\x41\x18\xd0\x58\x68\x34\x5b\xe4\xdd\xfc\xca\x1c\xcd\x4f\xb1\x43\x77\x77\xde\xf5\x1e\x3e\xee\x99\x61\x4b\x78\xc3\x0e\x2c\x3f\xb0\xf2\xd0\xb9\xa7\x46\x25\x43\x9f\x5d\x06\xa3\xa3\xcd\x02\x4a\x64\x7c\xf0\xe0\x72\x0c\x52\xb5\xa3\x38\x06\xb5\x43\x7d\x58\x7e\xd6\xcd\x75\xd7\x3f\xbe\x0e\x2e\xc7\xce\x3a\x7b\xe7\x78\xab\xb4\x42\x72\xd5\x86\x41\x70\x42\x77\x6b\xaf\x99\x26\xe1\xea\xb8\x7e\x74\xdb\x0f\x28\xcd\x51\xdb\x3b\xc1\x3b\xdd\xd7\x48\x2d\xa2\x84\xbc\xd1\xda\x4a\xa2\x55\xeb\xfc\x71\x09\x85\x2a\x4b\xd5\x0a\xb9\x89\xc3\xc0\xd3\x7c\xf9\x40\xf0\x30\x76\x9e\xda\xa0\x44\xcd\x08\x8f\x5c\xb4\x43\xfd\x08\x17\xde\x80\x17\xa0\x0a\x60\xd2\x9e\x7f\x2c\x9e\xb6\x4e\x2e\xd3\x94\x64\x37\x00\x6b\x16\xd5\x42\x8d\x3a\xf1\x84\xd0\xeb\x45\x13\xc1\xe1\xcb\x17\x88\x92\xc8\xfe\xd1\xc4\xad\xa0\x7f\xe0\x3f\x6d\x3d\x2f\xd0\x8c\x2e\xc7\x40\x93\x5e\x99\xd8\x1e\xdb\x9c\x76\x1d\xd3\x5d\xec\x05\xa4\xc9\x91\xfa\x34\x19\xc8\x4f\x93\x63\xdd\x69\x72\xa2\x2e\x4d\x8e\x44\xa1\x49\xa7\x4a\x27\xca\xc0\x7b\x14\xee\x9b\x78\x8f\x19\x4c\xaa\xbe\x9e\x76\x91\xe1\xbb\xd0\x1f\x49\x1f\x6e\x16\xbf\x3f\xa4\xb0\xb8\x99\xa7\x1f\x4f\x4e\xa3\x82\x7f\xca\x04\x87\xdb\x9b\xfe\xd4\x38\x12\x3c\x3e\x9c\x66\x9f\xe2\x28\xbd\x19\x92\xfc\xd2\x5f\xa6\xba\xba\x0c\xc9\x7d\xa9\x5e\xa6\x1f\xba\xf8\x38\xc2\xc3\x72\x71\xf3\x2b\x6c\x84\x21\x18\x79\xc0\xcb\xa1\xdc\xf9\x67\x90\xc8\x41\xa4\xf8\x5d\xf8\x6f\x00\x00\x00\xff\xff\x9c\x70\xf6\xf1\xfb\x0b\x00\x00")

func sql030_create_billableSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql030_create_billableSql,
		"sql/030_create_billable.sql",
	)
}

func sql030_create_billableSql() (*asset, error) {
	bytes, err := sql030_create_billableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/030_create_billable.sql", size: 3067, mode: os.FileMode(420), modTime: time.Unix(1519392732, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql035_create_pricing_plan_componentsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x51\x8b\x9c\x30\x14\x85\x9f\xcd\xaf\x38\x8f\x0a\x0a\x7d\x1f\x28\xb8\xf1\xce\xae\xec\xd4\x4c\x33\x4a\x67\x9f\x24\x68\x6a\x03\x1a\x25\x66\xca\xf6\xdf\x97\x11\xa7\xb0\x52\x4b\xf3\x14\x02\xe7\xbb\xe7\x9c\x9b\x24\xc1\xe4\x4c\x63\x6c\x57\x4f\xbd\xb2\x75\x33\x0e\xd3\x68\xb5\xf5\x33\x9a\xd1\x7a\x65\xec\x8c\xef\xa3\x1b\x6e\xbd\x5a\x2e\x68\x54\xdf\xdc\x7a\xe5\x8d\xed\x16\xa5\x9e\x19\x97\x94\x96\x84\x32\x7d\x3a\x11\xf2\x23\x0a\x51\x82\xae\xf9\xa5\xbc\xec\xb1\x43\x16\x98\x16\xb3\x76\x46\xf5\x38\xcb\xfc\x4b\x2a\xdf\xf0\x4a\x6f\x31\x0b\x3e\x28\x4c\x0b\x63\xbd\xee\xb4\x83\xa4\x23\x49\x2a\x38\x7d\x84\xce\x08\x4d\x1b\x41\x14\xc8\xe8\x44\x25\x81\xa7\x17\x9e\x66\x14\xb3\xc0\xaa\x41\xc3\xeb\x77\xbf\x18\x2a\xaa\xd3\x29\x66\xc1\x9a\x65\xfb\xce\x02\xfe\x42\xfc\x15\x61\xaf\x6d\xe7\x7f\x84\xde\x99\x21\xbc\x03\xa2\x08\x9f\xf1\x29\x8a\xf1\xcf\x93\x24\xb0\xa3\x87\x1e\x26\xff\xeb\xaf\xa8\x75\xec\x4a\xfb\x6f\x54\x74\x60\x8f\x76\xab\x22\xff\x5a\x11\xf2\x22\xa3\xeb\xa6\x64\xd3\xbe\xd7\x9b\xda\xea\x25\xbc\x28\x76\x97\x1b\x6e\x04\x31\x96\xb4\x07\xc6\x92\x04\xb3\xf6\xb7\xe9\xb1\x76\xfc\x54\xbd\x69\x95\x37\xa3\x85\x77\xa6\xeb\xb4\x63\x99\x14\x67\x94\x32\x7f\x7e\x26\x79\x37\xb3\x1a\xf1\x9d\xab\xa7\xa9\xa9\x57\x85\xae\x1f\x88\x7d\x23\x87\x3f\xbf\x67\xa5\xed\x32\x9e\xe8\x28\xe4\xbd\x80\x0b\xc9\x12\x42\xa2\x3a\x67\x77\xe1\x3e\x9b\x1d\x85\x04\xa5\xfc\x05\x52\x7c\x03\x5d\x89\x57\x25\xe1\x2c\x05\xa7\xac\x92\x84\xed\x88\x30\x3a\xb0\xdf\x01\x00\x00\xff\xff\x90\x3c\x90\x30\x10\x03\x00\x00")

func sql035_create_pricing_plan_componentsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql035_create_pricing_plan_componentsSql,
		"sql/035_create_pricing_plan_components.sql",
	)
}

func sql035_create_pricing_plan_componentsSql() (*asset, error) {
	bytes, err := sql035_create_pricing_plan_componentsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/035_create_pricing_plan_components.sql", size: 784, mode: os.FileMode(420), modTime: time.Unix(1519392733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sql/001_create_to_seconds_function.sql": sql001_create_to_seconds_functionSql,
	"sql/002_create_iso8601_function.sql": sql002_create_iso8601_functionSql,
	"sql/010_create_app_usage_events.sql": sql010_create_app_usage_eventsSql,
	"sql/020_create_service_usage_events.sql": sql020_create_service_usage_eventsSql,
	"sql/025_create_pricing_plans.sql": sql025_create_pricing_plansSql,
	"sql/026_create_pricing_functions.sql": sql026_create_pricing_functionsSql,
	"sql/027_create_validate_formula_trigger.sql": sql027_create_validate_formula_triggerSql,
	"sql/030_create_billable.sql": sql030_create_billableSql,
	"sql/035_create_pricing_plan_components.sql": sql035_create_pricing_plan_componentsSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"sql": &bintree{nil, map[string]*bintree{
		"001_create_to_seconds_function.sql": &bintree{sql001_create_to_seconds_functionSql, map[string]*bintree{}},
		"002_create_iso8601_function.sql": &bintree{sql002_create_iso8601_functionSql, map[string]*bintree{}},
		"010_create_app_usage_events.sql": &bintree{sql010_create_app_usage_eventsSql, map[string]*bintree{}},
		"020_create_service_usage_events.sql": &bintree{sql020_create_service_usage_eventsSql, map[string]*bintree{}},
		"025_create_pricing_plans.sql": &bintree{sql025_create_pricing_plansSql, map[string]*bintree{}},
		"026_create_pricing_functions.sql": &bintree{sql026_create_pricing_functionsSql, map[string]*bintree{}},
		"027_create_validate_formula_trigger.sql": &bintree{sql027_create_validate_formula_triggerSql, map[string]*bintree{}},
		"030_create_billable.sql": &bintree{sql030_create_billableSql, map[string]*bintree{}},
		"035_create_pricing_plan_components.sql": &bintree{sql035_create_pricing_plan_componentsSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

