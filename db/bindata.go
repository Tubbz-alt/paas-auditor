// Code generated by go-bindata.
// sources:
// sql/001_create_to_seconds_function.sql
// sql/002_create_iso8601_function.sql
// sql/010_create_app_usage_events.sql
// sql/020_create_service_usage_events.sql
// sql/025_create_pricing_plans.sql
// sql/026_create_pricing_functions.sql
// sql/027_create_validate_formula_trigger.sql
// sql/030_create_billable.sql
// DO NOT EDIT!

package db

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sql001_create_to_seconds_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x3d\x4b\x43\x31\x14\xc6\xf1\xd9\x7c\x8a\x67\xc8\x90\x0c\x77\x70\x6d\xa7\x18\x62\xb9\x90\xa6\x9a\x97\x59\xae\xf1\xd4\x0a\xed\xcd\x25\x49\x51\xfc\xf4\x22\xb5\xd2\xed\xc0\x79\xf8\xfd\xd9\x30\xa0\x97\x97\x46\xb9\xcc\x6f\x0d\xf4\xd5\xeb\x94\x7b\x43\x3f\x10\xe6\xf3\xe9\x95\x2a\xca\x1e\xd7\xf7\xbe\x96\x13\x26\xf4\xd6\xbf\xeb\x34\xbf\x13\xd3\xde\xa8\x68\xb0\xf3\xf0\xe6\xc9\x2a\x6d\xf0\x98\x9c\x8e\xe3\xce\xdd\xa8\xe2\x7f\x2f\xe1\x4d\x4c\xde\x85\x5f\x9b\xea\x47\x86\x0a\xe0\x9c\xdd\x35\x3a\x52\xee\xd7\xbc\xa0\xa5\xe4\xc3\xa5\x26\xce\xcb\x42\x55\xf0\x7b\x89\x01\xc7\xf2\x79\xb9\xa5\x5c\xad\xfe\x88\x35\xe3\x1c\x56\xb9\x4d\x52\x1b\x83\xf0\x6c\x31\x6e\xb7\x29\xaa\x07\x6b\x10\xa2\x1f\x75\x5c\xb3\x9f\x00\x00\x00\xff\xff\xec\xd8\x3f\xd6\xe6\x00\x00\x00")

func sql001_create_to_seconds_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql001_create_to_seconds_functionSql,
		"sql/001_create_to_seconds_function.sql",
	)
}

func sql001_create_to_seconds_functionSql() (*asset, error) {
	bytes, err := sql001_create_to_seconds_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/001_create_to_seconds_function.sql", size: 230, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql002_create_iso8601_functionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\x41\x4b\xc3\x30\x18\x87\xf1\xb3\xfd\x14\x7f\xca\xa0\x1b\x58\x50\x11\x91\xf5\x14\xd3\xd8\x15\xd6\x54\xd2\xe4\x50\x2f\x12\x66\x36\x0b\x5b\x52\x93\x77\x20\xfb\xf4\x32\x76\x7f\x9e\x5f\x59\x62\x7f\xf6\x3b\x9a\x82\xc7\x3e\x44\x44\x37\x47\x97\x9c\xa7\xc9\x1f\xf0\x6d\xc9\x25\xd8\x84\x76\xe8\xf1\xfa\xf2\xf0\x08\xa3\x79\xc6\x95\x60\x5a\xa0\x57\x50\xe2\x63\xcb\xb8\xc0\xbb\x91\x5c\xb7\xbd\xc4\x94\xc2\x35\x5b\x12\x68\x3a\xb9\x44\xf6\x34\xd3\x65\x85\xe8\xe8\x1c\x7d\x02\xb9\x3f\x02\x1b\xb0\x58\xe0\x4d\x34\xad\xcc\xee\x94\xd0\x46\x49\x50\xf8\xda\xfd\xd8\xb8\x24\xd8\xdb\x8a\x4b\xf0\x0e\x85\xd1\xbc\xb8\x47\x31\x8e\xe3\x58\x76\x5d\x59\xd7\xb9\xce\x37\x9b\xa7\xe7\x75\xd7\xae\x87\x21\xff\xcc\x8b\x55\x95\x09\x59\x57\x57\x72\xcb\x64\x63\x58\x23\x30\x1f\xe7\x43\xfa\x3d\x56\xd9\x7f\x00\x00\x00\xff\xff\xf6\x3f\xf6\x71\xdd\x00\x00\x00")

func sql002_create_iso8601_functionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql002_create_iso8601_functionSql,
		"sql/002_create_iso8601_function.sql",
	)
}

func sql002_create_iso8601_functionSql() (*asset, error) {
	bytes, err := sql002_create_iso8601_functionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/002_create_iso8601_function.sql", size: 221, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql010_create_app_usage_eventsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x41\x6b\x83\x30\x18\xc6\xf1\x73\xf2\x29\xde\x9b\x06\xdc\x69\xb0\x8b\x20\x44\xf7\x8e\x65\x68\xdc\x4c\x04\x6f\x21\x2c\x41\x72\xd8\x10\x13\xb7\x7e\xfc\xd2\x52\x68\x29\x5e\x7a\x7f\xf8\x3f\xbf\x66\x40\xae\x11\x34\xaf\x5b\x04\xf1\x06\xb2\xd7\x80\x93\x50\x5a\x81\x5d\x16\xb3\x45\x3b\x7b\xe3\xff\xfc\x6f\x8a\x90\x53\x12\x1c\x28\x1c\x04\x6f\x0b\x4a\xe6\x2d\x38\x68\xde\xf9\x90\x3f\xbf\x30\x18\xa5\xf8\x1a\xb1\xa0\xe4\x7b\xf5\x36\x79\x67\x6c\x02\x2d\x3a\x54\x9a\x77\x9f\x05\x25\xab\xfd\x37\x3f\x3e\x9e\x7a\xf0\xa1\x7a\x59\x53\x56\xd2\xcb\xbb\x90\xaf\x38\xdd\xbd\x07\x77\x30\x57\x41\x70\xd0\xcb\x1d\x51\x70\x8f\x54\x62\xb2\xc9\xef\x87\x20\xbf\x01\x3e\x55\x55\x76\xde\x66\x0c\x58\x49\x8f\x01\x00\x00\xff\xff\xaa\xf2\x69\x45\x24\x01\x00\x00")

func sql010_create_app_usage_eventsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql010_create_app_usage_eventsSql,
		"sql/010_create_app_usage_events.sql",
	)
}

func sql010_create_app_usage_eventsSql() (*asset, error) {
	bytes, err := sql010_create_app_usage_eventsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/010_create_app_usage_events.sql", size: 292, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql020_create_service_usage_eventsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\x4a\xc4\x30\x14\x45\xd7\xc9\x57\xbc\xdd\xb4\x50\x57\x82\x1b\x61\x20\x33\x3e\x31\x32\x4d\xb5\x49\xa1\xbb\x10\x9a\x47\xc9\xc2\x22\x4d\x5a\xf5\xef\x45\xdb\x85\x0e\x74\xd1\xfd\xbd\xe7\x9c\x73\x8d\xc2\x20\x18\x71\xba\x20\xc8\x47\x50\x95\x01\x6c\xa5\x36\x1a\x22\x8d\x73\xe8\xc8\x4e\xd1\xf5\x64\x69\xa6\x21\x45\xc8\x38\x0b\x1e\x34\xd6\x52\x5c\x0a\xce\xfa\x29\x78\x38\x3f\x89\x3a\xbb\xbd\xcb\xa1\x51\xf2\xb5\xc1\x82\xb3\x6e\x24\x97\xc8\x5b\x97\xc0\xc8\x12\xb5\x11\xe5\x4b\xc1\xd9\xe8\x3e\xec\x1b\xc5\x1f\x1e\x3c\xeb\x4a\x9d\x78\x7e\xcf\xd7\x02\xa9\x1e\xb0\xbd\x2a\x08\xfe\xd3\xfe\xaf\x08\x1e\x2a\xb5\x51\x16\xfc\x5e\x5a\x4c\x2e\xd1\x36\x10\xb2\x3f\xc1\x37\xc7\xe3\xe1\x77\x7f\xc8\x61\xaf\x27\x7d\xbd\xef\xd2\xac\xb3\x30\xc4\xe4\x86\x6e\xf9\x2f\xda\xef\x00\x00\x00\xff\xff\xc6\x29\xc3\x37\xaf\x01\x00\x00")

func sql020_create_service_usage_eventsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql020_create_service_usage_eventsSql,
		"sql/020_create_service_usage_events.sql",
	)
}

func sql020_create_service_usage_eventsSql() (*asset, error) {
	bytes, err := sql020_create_service_usage_eventsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/020_create_service_usage_events.sql", size: 431, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql025_create_pricing_plansSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6b\xb3\x30\x18\x85\xaf\xcd\xaf\x38\x97\x0a\x0a\xdf\x7d\xe1\x83\xae\xcb\x98\xd4\xd9\xcd\x2a\xb4\x57\x21\x68\xea\x02\x49\x94\x18\x47\xb7\x5f\x3f\x74\x76\xae\xdd\xc6\x9a\xab\x10\xde\xf7\x21\xe7\x3c\x51\x84\xd6\xca\x52\x9a\x1a\xad\xe2\xa6\x43\xd9\x18\xc7\xa5\xc1\xa1\xb1\xba\x57\xbc\x1b\x2e\x28\xb9\x2a\x7b\xc5\xdd\x38\x66\x65\x29\x3a\xb2\xca\xe8\x32\xa7\xc8\x97\x37\x09\x45\x7c\x87\x74\x93\x83\xee\xe2\x6d\xbe\x3d\x01\xd9\x08\xf4\x89\x27\x2b\x74\xc2\x4a\xae\xf0\x98\xc5\x0f\xcb\x6c\x8f\x35\xdd\x87\xc4\x33\x5c\x0b\x38\x71\x74\xe3\x72\x5a\x24\x49\x48\xbc\x17\xae\x64\xc5\x0e\xb6\xd1\x70\x52\x8b\xce\x71\xdd\xba\xb7\xaf\x13\x03\x96\xd5\xbd\xac\xbe\xed\x4e\x7f\xbe\x7c\x27\xde\xea\x9e\xae\xd6\xf0\x95\x30\xb5\x7b\xf6\x9d\x95\xda\xff\xa4\x04\x01\xfe\xe3\x5f\x10\xe2\xb7\x13\x45\x30\x8d\x83\xd0\xad\x7b\xfd\x11\x35\xe4\xf8\x93\x72\x1d\x6a\x4a\x30\xd1\xae\x46\x05\x0b\x72\x12\x52\xa4\xf1\x53\x41\x11\xa7\xb7\x74\x77\xe1\x45\x56\x47\x76\xe6\x86\x7d\x94\xcd\x4d\xc5\xe6\x52\x37\xe9\xb9\x40\xf8\xb3\x92\x10\x73\x6d\x0b\xf2\x1e\x00\x00\xff\xff\xdd\x23\x2b\xd5\x3c\x02\x00\x00")

func sql025_create_pricing_plansSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql025_create_pricing_plansSql,
		"sql/025_create_pricing_plans.sql",
	)
}

func sql025_create_pricing_plansSql() (*asset, error) {
	bytes, err := sql025_create_pricing_plansSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/025_create_pricing_plans.sql", size: 572, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql026_create_pricing_functionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4f\x6b\xe3\x3c\x10\xc6\xcf\x9a\x4f\x31\x07\x83\x6c\x70\xa0\xef\x7b\x8c\xd9\x83\x9b\x6a\x43\x20\x75\x17\x37\xb9\x2d\x04\x45\x99\xa6\x02\xc9\x72\xf5\xa7\xcd\x2e\xfd\xf0\x8b\x9b\xd8\x84\xee\xb2\xac\x2f\xd6\xcc\xe8\x99\x79\xf4\x9b\xd9\x0c\xe9\x44\x0a\x25\x3e\x39\x6f\x93\x91\xf8\xa6\xe3\x33\xbe\x4a\xaf\xe5\xde\x50\xc0\x90\xf6\x21\xea\x98\x22\x1d\x60\xd1\x8a\x7a\x23\xf0\xa1\xc5\x56\x7c\x5b\xd7\x0b\x81\x5f\xb7\xcd\x62\xb3\x7a\x68\x90\x5e\xa5\xd9\x5d\x5a\xe4\xc0\xec\x1e\xbb\x64\xc9\x6b\x55\x02\x3b\x24\x2f\xa3\x76\x1d\xc6\x10\x7f\x7a\xd9\x1d\xa9\x04\x36\x8e\x8b\x74\x8a\x50\xa0\xa7\x98\x7c\x17\x46\x15\xd6\x8f\x98\x65\x70\x27\x16\xeb\xba\x15\xc0\x5c\x8a\x63\xa9\x82\x5b\xb1\x5c\x35\xc0\x06\xdf\x29\x12\x2a\x67\x7b\x6d\x68\x9a\x7e\xf9\x17\xa8\xbb\xe8\x70\x50\xa6\xa0\xbb\x23\x30\xa6\x9c\x34\x14\x14\xe5\x76\x5f\xe2\x4d\x51\x02\x63\x74\x8a\x5e\xaa\x98\x53\xef\xd4\x33\x3e\x79\x67\x31\x4f\x7d\x4f\x3e\x1f\x5d\x17\x38\x43\xe3\xde\xae\x33\x45\x51\x01\x3b\x3b\x1e\xfa\x57\x20\x9a\xbb\x0a\xb3\x0c\xd7\x75\xb3\xdc\xd6\x4b\x81\xbd\xe9\x8f\xe1\xc5\xe0\xea\xfe\x7e\xbb\xa9\x6f\xd7\xa2\x02\x00\x98\xcd\x46\xb3\x13\xed\x0f\x8f\xe1\xc5\xfc\x8d\xed\xe7\x07\xe2\x35\x3b\x2c\xb0\x15\x9b\x6d\xdb\x3c\x9e\xc3\x3f\x80\x1b\xf2\x13\xb5\x21\x31\xff\x82\x79\x20\x43\x2a\x02\x63\xfc\x7c\xc2\x9c\x03\x63\xec\xfd\x1d\x3d\x1d\xe9\xd4\xef\x3c\xf5\x46\x2a\xca\x3f\x85\x13\xc3\x33\x93\x11\x76\x89\xfc\x86\x7f\x10\x65\x8c\x7f\xcf\x2c\x59\xe7\x7f\xec\x74\xb7\xb3\x7b\x5e\xe2\xf0\xf1\x3c\xfb\x6f\x3e\xbf\x2c\xb1\xe0\x25\xf2\xe3\x95\x20\x6a\x4b\xc3\xf5\x40\xca\x75\x87\x30\x68\x78\x9e\xfd\xff\x9b\xe0\xe2\x91\x17\x53\xa5\xe2\xc0\xfe\x75\x1f\x15\xfc\x0a\x00\x00\xff\xff\x3f\x83\x71\xf1\xf0\x02\x00\x00")

func sql026_create_pricing_functionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql026_create_pricing_functionsSql,
		"sql/026_create_pricing_functions.sql",
	)
}

func sql026_create_pricing_functionsSql() (*asset, error) {
	bytes, err := sql026_create_pricing_functionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/026_create_pricing_functions.sql", size: 752, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql027_create_validate_formula_triggerSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xd1\x4e\xbb\x48\x18\xc5\xaf\xcb\x53\x9c\x8d\xdd\x00\x5a\x5c\xbd\xdc\x12\xb3\xa9\x74\xaa\x24\x06\x9a\x29\x8d\x26\xeb\x2e\x41\xfa\x89\x13\x87\x81\x65\x06\xab\x1b\x1f\x7e\xd3\xda\x9a\x5a\x35\xd9\xec\xf2\xbf\x19\xc8\x64\xce\xef\x7c\xc3\xc5\x39\x78\x1e\x96\x0f\xc2\x90\x14\xda\xa0\x52\xf2\xc5\x0a\x38\x1b\x25\x0c\x31\x07\x67\xd3\xab\x51\xc0\x30\x99\x47\x41\x12\xc6\x11\x9e\x32\x29\x16\x99\xa1\xf4\xbe\x6a\xca\x56\x66\x8e\x0b\xce\x92\x39\x8f\x66\x30\x8d\x28\x0a\x6a\x30\x9a\xa1\xdf\xb7\xc6\x2c\xb8\x1a\x71\x66\xf5\x84\x5a\x6b\xb6\x02\x18\x7a\x36\xbe\xd5\x13\x52\x52\x91\xc9\xd4\x54\x8f\xa4\xb6\x9b\x8b\xb6\x2c\x5f\xd2\xba\x11\x39\x41\xb5\x25\x35\x22\xf7\xad\x73\x76\x11\x46\x9f\x39\xc3\x33\xc8\x6a\x49\x8d\x13\xb1\xeb\xe3\xcd\xa6\xeb\x7f\x79\xce\xd1\x24\x29\x37\x68\xa8\xa0\xe7\x3a\x6d\xa8\x96\x59\x4e\xce\xde\xc9\x01\xec\xe1\xd0\x11\xca\x50\x41\xcd\xeb\x9d\x28\x84\x32\xaf\x9b\x29\x5c\x7b\x00\xfb\x60\xb5\x14\xb6\xfb\x7f\x5d\x9c\xdf\x4f\xbc\x5f\xff\x38\x72\x7f\xbb\x3d\xde\xbe\xfe\x08\x7c\x97\xcc\xdb\x7e\x49\x65\xd5\xbc\xa4\x42\xa5\xe5\x5d\xb7\x64\x23\x4a\x5a\x71\x35\xe5\x95\x5a\xe8\x2e\xe1\x39\x09\xd9\xe9\xb0\xce\xeb\x6d\xb7\xdf\xf5\xb0\x53\x9a\xd7\x29\xed\xa8\x53\xda\x2f\x9d\xd2\xfe\xec\x94\xa6\x3b\xbd\xea\xc1\x9a\xb6\x03\x0b\x27\xd8\x3f\x86\x9f\xce\x60\xdb\x2e\x92\x4b\x16\x59\xbd\xbd\x34\xdc\x31\x3b\xc4\x7d\x53\x95\x5b\x4f\x5d\x4b\x61\x52\x53\xa5\x26\xbb\x93\xdf\xdd\xc4\x85\x14\xa5\x30\x38\x5d\x59\xf7\xf8\x28\x9c\x31\xb0\x9b\x80\x4d\xd7\x01\x6e\x6f\xac\xf0\x66\x25\x14\x36\xea\x21\x7e\xb6\x07\xf8\x30\x88\x6f\xf5\x58\x34\x46\x38\xf1\xad\x9e\xe7\x21\x33\x86\xca\xda\xc0\x54\x68\x35\xc1\x3c\x10\xde\x43\xbd\x02\x29\xdd\x36\x04\x61\xb0\xac\x9a\x47\x8d\xa5\x30\x0f\xc8\xab\xb2\xac\x14\x68\x51\x10\xf2\x4c\x13\x84\xaa\x5b\xa3\x3f\x26\xfd\xce\x75\xe9\x29\x93\xef\xd5\x72\x32\x30\xda\xfc\xdd\x64\xaa\x20\x47\x55\x4b\xc7\x1d\x60\xfd\x70\x07\xd8\xcd\x7c\xd7\xff\x77\xb8\xd3\x6f\x70\x38\x82\x7d\x8a\xb7\xf4\xb1\xff\x23\x5b\xb5\x52\x0e\xd6\xcb\x27\xf9\x5b\x3d\xae\xb6\x7d\x8b\x45\x63\xdf\xea\xf7\x21\x33\x55\xb4\x59\x41\xa8\x65\x5d\xe8\xbf\xa4\x6f\x59\x9e\x07\x4d\xa6\xad\xb7\x35\x6a\x8d\x79\x3c\x45\xc2\xc3\x8b\x0b\xc6\x11\x4e\xc0\x6e\xc2\x59\x32\x83\x29\x9a\x74\xbf\x84\x11\x47\x58\xcd\x27\x54\x91\xd6\x32\x53\xda\xdf\x56\xf8\x56\xff\xa5\xea\x9c\x4d\x62\xce\x10\x46\x33\xc6\x93\x55\xdb\xcf\xa7\xe3\x75\xef\xef\xd1\xac\x49\xcc\xc1\x46\xc1\x25\x78\x7c\x0d\x76\xc3\x82\x79\xc2\x30\xe5\x71\xc0\xc6\x73\xce\xbe\xf8\x27\xf0\xad\x7f\x02\x00\x00\xff\xff\x8c\x2d\xaa\xe4\x55\x08\x00\x00")

func sql027_create_validate_formula_triggerSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql027_create_validate_formula_triggerSql,
		"sql/027_create_validate_formula_trigger.sql",
	)
}

func sql027_create_validate_formula_triggerSql() (*asset, error) {
	bytes, err := sql027_create_validate_formula_triggerSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/027_create_validate_formula_trigger.sql", size: 2133, mode: os.FileMode(436), modTime: time.Unix(1519124886, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sql030_create_billableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\x4d\x6f\xe3\x36\x13\xc7\xcf\xd2\xa7\x18\xf8\x22\xeb\x81\xa5\x67\xd3\xd8\xed\xc6\x41\x17\x08\x6a\xb5\x30\xb0\x4d\xd2\xd8\x69\x17\xbd\x08\xb4\x34\xb2\xd9\x4a\xa4\x40\x52\x56\x12\xec\x87\x2f\x48\x99\xd6\xcb\x3a\x71\x0e\x45\x7d\xb1\x5e\xe6\x3f\x1a\xce\xfc\x86\xc3\xc5\xc3\xdd\x3d\xfc\x7a\xb3\x8e\x1e\x96\x37\x9f\x97\x7f\x46\x0b\xf8\x7d\x19\xfd\x01\xcb\x9f\x21\xfa\xb2\x5c\xad\x57\xb0\xa1\x79\x4e\x36\x39\x5e\xbb\x3f\x3d\x44\x37\xeb\xe8\xb4\xf1\xed\xdd\x7a\x28\x80\x9b\x15\xd4\x54\xed\x5c\x37\x08\x00\x9f\x94\x20\x89\x82\x4a\x62\x56\xe5\x20\x55\x95\x65\x90\x09\x5e\x40\x25\xc9\x16\x01\xf7\xc8\x94\xd4\x96\x35\x82\x12\x48\x14\x6c\xb8\xda\x01\x29\x4b\x09\x84\xa5\x20\x51\xec\x69\x82\x12\x88\x6c\xbf\x30\x12\x28\x79\x25\x12\x94\x23\x90\x1c\x18\x17\x05\xc9\xe9\x0b\x82\xda\x21\x64\x14\xf3\xd4\xba\x6c\x5f\x49\x45\x14\x4a\x50\x1c\xfe\xaa\xa4\x82\xd5\xfa\xe6\x61\x1d\x2d\xfe\xbf\x5a\xdf\xdd\xdf\x47\x0b\xd8\x60\x42\x2a\x89\x6d\x18\x09\x67\x12\x93\x4a\xd1\x3d\x5a\x63\x2d\x2e\x90\x30\x18\x55\x65\x4a\x14\x8e\xdc\x26\x7c\x1d\xdb\xd8\x75\xc6\xae\xe3\x48\xcc\x31\x51\xae\xe3\x38\x34\x9d\xe8\xbf\x44\x3b\xc3\x34\x26\x6a\x3e\x57\xb4\x40\xa9\x48\x51\xaa\x17\x2d\x69\x5f\x19\xcb\xb1\x20\x75\x5c\xa0\xd4\x79\x09\x3e\x7d\xf2\x48\x59\xc6\xdb\x8a\xa6\x9e\xaf\x8d\xf5\xd5\xab\x66\x8c\x14\xd8\x98\xe9\xab\x93\x66\x5c\x6c\x3b\xde\xec\xdd\x49\x53\x59\x92\x04\x3b\xc6\xed\xbd\x31\xf7\xb2\x69\x3a\xdd\x5c\xcd\x48\x90\xcd\x66\x18\x4c\x67\x57\x97\xc1\xc7\x74\x36\x0d\x2e\x2f\xbf\x9f\x26\xdf\xcd\x7e\xb8\xfa\x98\x4c\xbd\xf9\x5c\xe1\x93\xd2\xf2\x32\x27\xac\x51\x43\x10\x40\x46\xfe\x46\xf3\x08\x68\x0a\x19\x17\x90\xf0\xa2\xac\x54\xf3\x4c\x1a\xff\x29\x66\xa4\xca\x55\x70\x78\x33\x74\x65\x96\x08\x27\x7f\x3d\xff\xda\xee\xf4\x17\x12\x4e\x72\x94\x09\x0e\x17\x4e\x99\x54\x84\x25\x18\x27\xbc\x62\xca\x9b\x80\xf7\xc1\xf3\xe7\x73\x56\x15\x28\x68\xa2\x03\xd0\x16\xcd\xdb\xc9\x5b\x8e\x0a\x2c\xb8\x78\x8e\x29\x8b\x8b\x4d\x5c\xa2\x88\xad\xe7\x53\x3e\xbb\xc6\xc6\xeb\xb0\x1c\x1a\x5c\xcf\x14\x42\x5f\xb9\x8e\xa3\xfb\x47\x1b\xea\xd2\x9b\x36\x8a\x0f\x6d\xe4\x38\xf5\x0e\x05\xbe\xee\xe4\x47\xf0\x0e\x2c\x7b\xda\x88\x0b\x78\xc3\xce\x34\x86\xe7\x3a\x3e\x54\x8c\x72\x06\x24\xcf\xe1\x5f\x66\xfc\xd0\xdd\xc7\xfc\xbc\x07\xf8\x6f\x34\xff\x29\xfd\xaf\x45\x73\xa4\xbc\x51\xb5\xd0\x9f\x15\xb5\xe1\xb7\x78\x9b\x3e\xb8\xf0\xde\x62\xcf\xfb\xe0\xbd\x8d\x51\x42\xa4\x21\x41\x33\xc1\xe0\x9b\x10\x4c\xa1\x7d\x5d\xe9\x66\x7f\x5f\x78\x7a\xf7\x64\x7d\x40\xce\x6a\x17\xd1\xe7\xa8\xa7\xb5\xd0\xbc\x43\xfb\x78\xbf\x78\xed\xbb\xc8\xd2\x53\xc0\xdb\xbc\xbd\x17\xfa\x21\x29\xea\xb9\x6c\xe0\x2e\x08\x23\x5b\x4c\xe3\xa1\x85\xa6\xdd\xf5\x27\x66\x74\x25\xbc\xd8\x50\x86\x66\x0a\x25\x9c\xed\x51\x28\x3d\x00\x04\xaf\xa5\xd9\x56\x90\x24\x3b\x3b\x19\x02\x3b\x21\xb8\xe8\x3c\x6a\x26\x4b\x49\xa8\x30\x03\x11\xd2\x4a\x10\xa5\x3b\x49\x10\xb6\x45\xfd\x0d\x9a\x01\x81\xe3\x30\x83\x94\xa3\x04\xc6\x15\xec\xc8\x1e\x81\x80\x75\x61\x56\x0a\xcf\xa8\x26\x4d\xae\xf4\x98\xb3\x2a\x4f\x0e\xfc\x42\x4d\xf3\x1c\x4c\x06\x95\xb1\xd4\x2d\x69\x2e\xf6\x14\x6b\xa0\x12\x04\x66\x02\xe5\x0e\xd3\x66\x7e\xc5\x46\x66\xa7\xd8\xb1\xbb\x1b\x76\x2d\xc3\xdd\x9e\xe9\xb7\x84\x05\xb6\x87\x7c\x0f\xe5\x3e\xb9\x43\x50\x95\x54\x2f\x26\x82\x71\x67\xb3\x80\x1c\x49\xda\x7b\x70\x31\x01\xc6\xeb\xb1\xef\x03\xdf\xa3\x38\x2e\x3f\x6e\xe6\xba\xe9\x1f\x9b\x07\x13\x63\x83\xce\x81\x1c\x8b\x4a\x4d\x59\xca\x6b\xd7\x71\x06\x72\xb3\xf6\x92\x08\x45\x4d\x1e\x37\xcf\x66\xfb\x01\x2e\x52\x14\xfa\x8e\xa6\x4d\xdd\x37\xa8\x6a\x44\x06\x49\x25\x84\x2e\x89\xe0\xb5\xe1\xe3\x02\x32\x9e\xe7\xbc\xa6\x6c\xeb\xbb\x8e\x95\xd9\xf4\x01\x4d\x2d\x54\x5b\x64\x28\x88\xc2\x0e\x46\x7b\x14\xcf\x30\xb2\x04\x8e\x80\x67\x40\x98\x3e\x00\x69\x7b\xb5\x33\xf5\x92\x55\xae\xf4\x0e\xa0\x69\xe1\x35\x94\x28\x02\x2b\x70\x5b\x7c\x06\x05\x54\x21\x4d\xe1\xeb\x57\xf0\x02\x4f\xff\xa9\xd0\xac\xa9\x7d\x60\x63\xd1\x5d\x40\x51\x8e\x2f\x26\xa0\xc2\xb6\x56\xbe\x3e\xc8\xd9\x23\x57\xdc\x94\x55\x85\xff\xeb\xe7\xd4\xb2\xa3\x5c\xdf\x75\x0f\x5f\xd6\x93\x58\x84\x7d\xa5\x08\x0f\x7f\x07\x40\x44\x78\x80\x43\x84\x1d\xb2\x44\xd8\x43\x4b\x84\x5d\xa6\x44\x38\x20\x47\x84\xb6\xe0\x6e\x13\x52\x9b\x09\xe1\x1e\xf6\x04\x11\x9a\x02\xf7\x06\x5f\x5b\x1e\x1d\x95\x7b\xed\xda\x13\xee\xe3\xed\xf2\xb7\xc7\x08\x96\xb7\x8b\xe8\xcb\xe0\x70\x4b\xd3\xa7\xb8\xb3\x22\xb8\xbb\x6d\x4f\xa3\xe3\xce\x0b\xff\x78\x5c\x7e\xcd\xcb\x50\xfc\x1e\x0d\x17\xdb\xbe\xc8\xe6\xec\xbc\xd4\x24\xb4\x2f\x6e\x73\x7c\x5e\x7e\xdc\x5a\xba\x1e\x1e\x57\xcb\xdb\x5f\x60\x4b\xa5\x82\xb1\x35\x38\xef\xca\x1c\xca\x7a\x81\x1c\xab\xeb\x5f\xbb\xff\x04\x00\x00\xff\xff\x6e\x9f\x34\x96\x90\x0c\x00\x00")

func sql030_create_billableSqlBytes() ([]byte, error) {
	return bindataRead(
		_sql030_create_billableSql,
		"sql/030_create_billable.sql",
	)
}

func sql030_create_billableSql() (*asset, error) {
	bytes, err := sql030_create_billableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/030_create_billable.sql", size: 3216, mode: os.FileMode(436), modTime: time.Unix(1519136523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sql/001_create_to_seconds_function.sql": sql001_create_to_seconds_functionSql,
	"sql/002_create_iso8601_function.sql": sql002_create_iso8601_functionSql,
	"sql/010_create_app_usage_events.sql": sql010_create_app_usage_eventsSql,
	"sql/020_create_service_usage_events.sql": sql020_create_service_usage_eventsSql,
	"sql/025_create_pricing_plans.sql": sql025_create_pricing_plansSql,
	"sql/026_create_pricing_functions.sql": sql026_create_pricing_functionsSql,
	"sql/027_create_validate_formula_trigger.sql": sql027_create_validate_formula_triggerSql,
	"sql/030_create_billable.sql": sql030_create_billableSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"sql": &bintree{nil, map[string]*bintree{
		"001_create_to_seconds_function.sql": &bintree{sql001_create_to_seconds_functionSql, map[string]*bintree{}},
		"002_create_iso8601_function.sql": &bintree{sql002_create_iso8601_functionSql, map[string]*bintree{}},
		"010_create_app_usage_events.sql": &bintree{sql010_create_app_usage_eventsSql, map[string]*bintree{}},
		"020_create_service_usage_events.sql": &bintree{sql020_create_service_usage_eventsSql, map[string]*bintree{}},
		"025_create_pricing_plans.sql": &bintree{sql025_create_pricing_plansSql, map[string]*bintree{}},
		"026_create_pricing_functions.sql": &bintree{sql026_create_pricing_functionsSql, map[string]*bintree{}},
		"027_create_validate_formula_trigger.sql": &bintree{sql027_create_validate_formula_triggerSql, map[string]*bintree{}},
		"030_create_billable.sql": &bintree{sql030_create_billableSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

